/**
 * # Description
 * Keep track of all relavent delay metrics
 * 
 * # Methods
 * create() -> SequenceNumberManager.t
 * increment(SequenceNumberManager.t, int<<3>>) -> int<<24>>
 **/
module SequenceNumberManager : {
    global type t;
    constr t create ();

   /**
    * # Description
    * Increments and returns the current, non-incremented sequence
    * number of a given path.
    * 
    * # Parameters
    * self (t): self
    * path_id (int<<3>>): the path on which the packet is tunneled
    * 
    * # Returns
    * sequence_number (int<<24>>): the current, non-incremented sequence number
    **/
    fun int<<24>> increment (
        t self,
        int<<3>> path_id
    ) [start <= self; end self];
}
{
    type t = {
        Counter.t<<24>>[8] seq_nums;
    }

    constr t create () = {
        seq_nums = [Counter.create(0) for x < 8];
        /* TODO */
    };

    fun int<<24>> increment (
        t self,
        int<<3>> path_id
    ) {
        printf("ERROR: `SequenceNumberManager.increment()` is *unimplemented*");
        return 0;
        /* TODO */
    }
}
