// Manages all Tango UDP headers for all paths
module TangoHeaderManager : {
    global type t<<'num_path_ids>>;
    constr t<<'num_path_ids>> create();

   /*
    * Get a header for a given packet.
    * 
    * PARAMETERS
    * ----------
    * self (t<<'num_path_ids>>): self
    * path_id (int<<'path_id_sz>>): path upon the invalid packet was found
    */
    fun IPv6Header_t get_path_header(t<<'num_path_ids>> self, int<<'path_id_sz>> path_id) [start <= self; end self];
}
{
    type <<'num_path_ids>> = {
        IPv6Header_t['num_path_ids] headers; // TODO: or use Array.t<<?>> type>
    }
    
    constr <<'num_path_ids>> create() = {
        /* TODO */
    };

    fun IPv6Header_t get_path_header(t<<'num_path_ids>> self, int<<'path_id_sz>> path_id) {
        /* TODO */
    }
}
