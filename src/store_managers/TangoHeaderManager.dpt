include "../Types.dpt"

symbolic size num_path_ids;

// Manages all Tango UDP headers for all paths
module TangoHeaderManager : {
    global type t;
    constr t create ();

   /*
    * Get a header for a given packet.
    * 
    * PARAMETERS
    * ----------
    * self (t): self
    * path_id (int): path upon the invalid packet was found
    */
    fun IPv6Header_t get_path_header (
        t self,
        int path_id
    ) [start <= self; end self];
}
{
    type t = {
        Array.t<<ipv6_hdr_sz>> headers;
    }
    
    constr t create () = {
        headers = Array.create(size_to_int(num_path_ids));
        /* TODO */
    };

    fun IPv6Header_t get_path_header (
        t self,
        int path_id
    ) {
        printf("ERROR: `TangoHeaderManager.get_path_header()` is *unimplemented*");
        return {
            version = 0;
            traffic_class = 0;
            flow_label = 0;
            payload_len = 0;
            next_header = 0;
            hop_limit = 0;
            src_addr = 0;
            dest_addr = 0;
        };
        /* TODO */
    }
}
