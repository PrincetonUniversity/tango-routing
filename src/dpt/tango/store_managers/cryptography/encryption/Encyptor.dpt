include "../../../Types.dpt"

/**
 * # Description
 * Encrypt route updates using a one-time pad
 * 
 * # Methods
 * create() -> Encryptor.t
 * encrypt(Encryptor.t, int<<64>>) -> TaggedCiphertext_t
 **/
module Encryptor : {
    global type t;
    constr t create ();

   /**
    * # Description
    * Encrypt a given route update with a one-time pad
    * 
    * # Parameters
    * self (t): self
    * encoded_update (int<<64>>): fully encoded route mapping update
    * 
    * # Returns
    * ciphertext (TaggedCiphertext_t): encrypted route update
    **/
    fun TaggedCiphertext_t encrypt (
        t self,
        int<<64>> encoded_update
    ) [start <= self; end self];
}
{
    type t = {
        Counter.t<<4>> seq_number;
        Array.t<<64>> one_time_pads;
    }

    constr t create () = {
        seq_number = Counter.create(0);
        one_time_pads = Array.create(16);
    };

    fun TaggedCiphertext_t encrypt (
        t self,
        int<<64>> encoded_update
    ) {
        int<<4>> curr_seq_num = Counter.add(self#seq_number, 1);
        int<<64>> pad = Array.get(self#one_time_pads, curr_seq_num);

        return {
            seq_num_tag = curr_seq_num;
            ciphertext = encoded_update ^^ pad;
        };
    }
}
