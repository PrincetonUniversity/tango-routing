/**
 * # Description
 * Manage all precomputed metric signatures
 * 
 * # Methods
 * create() -> MetricSignatureManager.t
 * sign(MetricSignatureManager.t, int, int<<3>>) -> int<<32>>
 * verify(MetricSignatureManager.t, int, int<<3>>, int<<32>>) -> bool
 **/
module MetricSignatureManager : {
    global type t;
    constr t create ();

   /**
    * # Description
    * Gets a signature for a given timestamp and physical path ID
    * 
    * # Parameters
    * self (t): self
    * timestamp (int<<12>>): timestamp of packet send/receive
    * path_id (int<<3>>): the physcial path ID packet is/was sent on
    * 
    * # Returns
    * signature (int<<32>>): signature of timestamp + path ID
    **/
    fun int<<32>> sign (
        t self,
        int<<12>> timestamp,
        int<<8>> block_idx
    ) [start <= self; end self];

    /**
    * # Description
    * Populate a timestamp signature in a particular register cell.
    * 
    * # Parameters
    * self (t): self
    * sig_addr (int<<5>>): cell to populate
    * signature (int<<32>>): signature to populate with
    **/
    fun void set_signature (
        t self,
        int<<16>> sig_addr,
        int<<32>> signature,
        int<<8>> block_idx
    ) [start <= self; end self];
}
{
    type t = {
        Array.t<<32>> ts_signatures0;
        Array.t<<32>> ts_signatures1;
    }

    constr t create () = {
        // ASSUMPTION:16ms control loop
        ts_signatures0 = Array.create(16);
        ts_signatures1 = Array.create(16);
    };

    fun int<<32>> sign (
        t self,
        int<<12>> timestamp,
        int<<8>> block_idx
    ) {
        if (((int<<32>>) block_idx) == 0) {
            return Array.get(self#ts_signatures0, ((int<<16>>) (timestamp[3:0])));
        } else {
            return Array.get(self#ts_signatures1, ((int<<16>>) (timestamp[3:0])));
        }
    }

    fun void set_signature (
        t self,
        int<<16>> sig_addr,
        int<<32>> signature,
        int<<8>> block_idx
    ) {
        match (block_idx) with
        | 0 -> { Array.set(self#ts_signatures0, sig_addr, signature); }
        | _ -> { Array.set(self#ts_signatures1, sig_addr, signature); }
    }
}
