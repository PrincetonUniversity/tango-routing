/**
 * # Description
 * Manage all sequence number book signatures
 * 
 * # Methods
 * create() -> BookSignatureManager.t
 * sign(BookSignatureManager.t, int<<16>>, int<<3>>) -> int<<1>>
 * verify(BookSignatureManager.t, int<<16>>, int<<3>>, int<<1>>) -> bool
 **/
module BookSignatureManager : {
    global type t;
    constr t create ();

   /**
    * # Description
    * Gets a signature for a given sequence number and physical path ID
    * 
    * # Parameters
    * self (t): self
    * seq_number (int<<16>>): sequence number to sign
    * path_id (int<<3>>): path ID of associated sequence number
    * 
    * # Returns
    * signature (int<<1>>): signature of timestamp + path ID
    **/
    fun int<<1>> sign (
        t self,
        int<<16>> seq_number,
        int<<3>> path_id
    ) [start <= self; end self];

   /**
    * # Description
    * Verifies a signature for a given timestamp and physical path ID
    * 
    * # Parameters
    * self (t): self
    * seq_number (int<<16>>): sequence number signed
    * path_id (int<<3>>): path ID of associated sequence number
    * signature (int<<1>>): signature to validate
    * 
    * # Returns
    * is_valid (bool): if signature is valid
    **/
    fun bool verify (
        t self,
        int<<16>> seq_number,
        int<<3>> path_id,
        int<<1>> signature
    ) [start <= self; end self];
}
{
    type t = {
        Array.t<<1>> onebit_signatures0;
        Array.t<<1>> onebit_signatures1;
        Array.t<<1>> onebit_signatures2;
        Array.t<<1>> onebit_signatures3;
        Array.t<<1>> onebit_signatures4;
        Array.t<<1>> onebit_signatures5;
        Array.t<<1>> onebit_signatures6;
        Array.t<<1>> onebit_signatures7;
    }

    constr t create () = {
        onebit_signatures0 = Array.create(65536); // 2^16
        onebit_signatures1 = Array.create(65536);
        onebit_signatures2 = Array.create(65536);
        onebit_signatures3 = Array.create(65536);
        onebit_signatures4 = Array.create(65536);
        onebit_signatures5 = Array.create(65536);
        onebit_signatures6 = Array.create(65536);
        onebit_signatures7 = Array.create(65536);
    };

    fun int<<1>> sign (
        t self,
        int<<16>> seq_number,
        int<<3>> path_id
    ) {
        match path_id with
        | 0 -> { return Array.get(self#onebit_signatures0, seq_number); }
        | 1 -> { return Array.get(self#onebit_signatures1, seq_number); }
        | 2 -> { return Array.get(self#onebit_signatures2, seq_number); }
        | 3 -> { return Array.get(self#onebit_signatures3, seq_number); }
        | 4 -> { return Array.get(self#onebit_signatures4, seq_number); }
        | 5 -> { return Array.get(self#onebit_signatures5, seq_number); }
        | 6 -> { return Array.get(self#onebit_signatures6, seq_number); }
        | 7 -> { return Array.get(self#onebit_signatures7, seq_number); }
    }

    fun bool verify (
        t self,
        int<<16>> seq_number,
        int<<3>> path_id,
        int<<1>> signature
    ) {
        match path_id with
        | 0 -> {
            return ((int<<32>>) Array.get(self#onebit_signatures0, seq_number)) == ((int<<32>>) signature);
        }
        | 1 -> {
            return ((int<<32>>) Array.get(self#onebit_signatures1, seq_number)) == ((int<<32>>) signature);
        }
        | 2 -> {
            return ((int<<32>>) Array.get(self#onebit_signatures2, seq_number)) == ((int<<32>>) signature);
        }
        | 3 -> {
            return ((int<<32>>) Array.get(self#onebit_signatures3, seq_number)) == ((int<<32>>) signature);
        }
        | 4 -> {
            return ((int<<32>>) Array.get(self#onebit_signatures4, seq_number)) == ((int<<32>>) signature);
        }
        | 5 -> {
            return ((int<<32>>) Array.get(self#onebit_signatures5, seq_number)) == ((int<<32>>) signature);
        }
        | 6 -> {
            return ((int<<32>>) Array.get(self#onebit_signatures6, seq_number)) == ((int<<32>>) signature);
        }
        | 7 -> {
            return ((int<<32>>) Array.get(self#onebit_signatures7, seq_number)) == ((int<<32>>) signature);
        }
    }
}
