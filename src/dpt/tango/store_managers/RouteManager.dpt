/**
 * # Description
 * Manage all traffic class to physical path ID mappings
 * 
 * # Methods
 * create() -> RouteManager.t
 * update_route(RouteManager.t, int<<8>>, int<<8>>) -> void
 * get_path_id(RouteManager.t, int<<8>>) -> int<<8>>
 **/
module RouteManager : {
    global type t;
    constr t create ();

    /**
    * # Description
    * Updates map with a new traffic class to physical path ID mapping.
    * 
    * # Parameters
    * self (t): self
    * traffic_cls (int<<4>>): traffic class to update mapping for
    * path_id (int<<3>>): physical path ID to update mapping to
    **/
    fun void update_route (
        t self,
        int<<8>> traffic_cls,
        int<<8>> path_id
    ) [start <= self; end self];
    
    /**
    * # Description
    * Gets a physical path ID mapping for a specific traffic class.
    * 
    * # Parameters
    * self (t): self
    * traffic_cls (int<<8>>): traffic class to get mapping for
    * 
    * # Returns
    * path_id (int<<8>>): mapped physical path ID
    **/
    fun int<<8>> get_path_id (
        t self,
        int<<8>> traffic_cls
    ) [start <= self; end self];
}
{
    type t = {
        Array.t<<8>> mappings;
    }

    constr t create () = {
        mappings = Array.create(16);
    };

    fun void update_route (
        t self,
        int<<8>> traffic_cls,
        int<<8>> path_id
    ) {
        Array.set(self#mappings, traffic_cls, path_id);
    }

    fun int<<8>> get_path_id (
        t self,
        int<<8>> traffic_cls
    ) {
        return Array.get(self#mappings, traffic_cls);
    }
}
