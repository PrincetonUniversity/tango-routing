---normalizeInts.ml log---
[balance_assign_exp] flat args: 
[balance_assign_exp]176
[balance_assign_exp](int<<16>>)[7 : 4]forward_flow_ip_header_0^0
[balance_assign_exp]forward_flow_ip_header_2
---[balance_assign_exp] flat args--- 
[balance_assign_exp] original expression:
176+(int<<16>>)[7 : 4]forward_flow_ip_header_0^0+forward_flow_ip_header_2
[balance_assign_exp] balanced expression:
forward_flow_ip_header_2+(int<<16>>)[7 : 4]forward_flow_ip_header_0^0+176
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: 15
[transform_precompute_exps.visit_exp] atomic exp: 15
[transform_precompute_exps.visit_exp] exp: map_flow_to_traffic_class_ret
[transform_precompute_exps.visit_exp] atomic exp: map_flow_to_traffic_class_ret
[transform_precompute_exps.visit_exp] exp: forward_flow_eth_header_0
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_eth_header_0
[transform_precompute_exps.visit_exp] exp: forward_flow_eth_header_1
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_eth_header_1
[transform_precompute_exps.visit_exp] exp: forward_flow_eth_header_2
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_eth_header_2
[transform_precompute_exps.visit_exp] exp: forward_flow_ip_header_0
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_ip_header_0
[transform_precompute_exps.visit_exp] exp: forward_flow_ip_header_1
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_ip_header_1
[transform_precompute_exps.visit_exp] exp: forward_flow_ip_header_2
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_ip_header_2
[transform_precompute_exps.visit_exp] exp: forward_flow_ip_header_3
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_ip_header_3
[transform_precompute_exps.visit_exp] exp: forward_flow_ip_header_4
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_ip_header_4
[transform_precompute_exps.visit_exp] exp: forward_flow_ip_header_5
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_ip_header_5
[transform_precompute_exps.visit_exp] exp: forward_flow_ip_header_6
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_ip_header_6
[transform_precompute_exps.visit_exp] exp: forward_flow_ip_header_7
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_ip_header_7
[transform_precompute_exps.visit_exp] exp: forward_flow_ip_header_8
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_ip_header_8
[transform_precompute_exps.visit_exp] exp: forward_flow_ip_header_9
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_ip_header_9
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: Array.get(route_manager_0,traffic_class)
[transform_precompute_exps.visit_exp] atomic exp: Array.get(route_manager_0,traffic_class)
[transform_precompute_exps.visit_exp] exp: RouteManager_get_path_id_ret
[transform_precompute_exps.visit_exp] atomic exp: RouteManager_get_path_id_ret
[transform_precompute_exps.visit_exp] exp: 32
[transform_precompute_exps.visit_exp] atomic exp: 32
[transform_precompute_exps.visit_exp] exp: 32
[transform_precompute_exps.visit_exp] atomic exp: 32
[transform_precompute_exps.visit_exp] exp: 32
[transform_precompute_exps.visit_exp] atomic exp: 32
[transform_precompute_exps.visit_exp] exp: 32
[transform_precompute_exps.visit_exp] atomic exp: 32
[transform_precompute_exps.visit_exp] exp: 32
[transform_precompute_exps.visit_exp] atomic exp: 32
[transform_precompute_exps.visit_exp] exp: 32
[transform_precompute_exps.visit_exp] atomic exp: 32
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: map_path_to_tunnel_header_ret_0
[transform_precompute_exps.visit_exp] atomic exp: map_path_to_tunnel_header_ret_0
[transform_precompute_exps.visit_exp] exp: map_path_to_tunnel_header_ret_1
[transform_precompute_exps.visit_exp] atomic exp: map_path_to_tunnel_header_ret_1
[transform_precompute_exps.visit_exp] exp: map_path_to_tunnel_header_ret_2
[transform_precompute_exps.visit_exp] atomic exp: map_path_to_tunnel_header_ret_2
[transform_precompute_exps.visit_exp] exp: map_path_to_tunnel_header_ret_3
[transform_precompute_exps.visit_exp] atomic exp: map_path_to_tunnel_header_ret_3
[transform_precompute_exps.visit_exp] exp: map_path_to_tunnel_header_ret_4
[transform_precompute_exps.visit_exp] atomic exp: map_path_to_tunnel_header_ret_4
[transform_precompute_exps.visit_exp] exp: map_path_to_tunnel_header_ret_5
[transform_precompute_exps.visit_exp] atomic exp: map_path_to_tunnel_header_ret_5
[transform_precompute_exps.visit_exp] exp: 32
[transform_precompute_exps.visit_exp] atomic exp: 32
[transform_precompute_exps.visit_exp] exp: Array.update(sequence_counters_0,path_id,SequenceNumberManager_next,0,SequenceNumberManager_next,0)
[transform_precompute_exps.visit_exp] atomic exp: Array.update(sequence_counters_0,path_id,SequenceNumberManager_next,0,SequenceNumberManager_next,0)
[transform_precompute_exps.visit_exp] exp: SequenceNumberManager_increment_ret
[transform_precompute_exps.visit_exp] atomic exp: SequenceNumberManager_increment_ret
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: Array.get(outgoing_book_signature_manager_0,seq_number)
[transform_precompute_exps.visit_exp] atomic exp: Array.get(outgoing_book_signature_manager_0,seq_number)
[transform_precompute_exps.visit_exp] exp: Array.get(outgoing_book_signature_manager_1,seq_number)
[transform_precompute_exps.visit_exp] atomic exp: Array.get(outgoing_book_signature_manager_1,seq_number)
[transform_precompute_exps.visit_exp] exp: Array.get(outgoing_book_signature_manager_2,seq_number)
[transform_precompute_exps.visit_exp] atomic exp: Array.get(outgoing_book_signature_manager_2,seq_number)
[transform_precompute_exps.visit_exp] exp: Array.get(outgoing_book_signature_manager_3,seq_number)
[transform_precompute_exps.visit_exp] atomic exp: Array.get(outgoing_book_signature_manager_3,seq_number)
[transform_precompute_exps.visit_exp] exp: Array.get(outgoing_book_signature_manager_4,seq_number)
[transform_precompute_exps.visit_exp] atomic exp: Array.get(outgoing_book_signature_manager_4,seq_number)
[transform_precompute_exps.visit_exp] exp: Array.get(outgoing_book_signature_manager_5,seq_number)
[transform_precompute_exps.visit_exp] atomic exp: Array.get(outgoing_book_signature_manager_5,seq_number)
[transform_precompute_exps.visit_exp] exp: Array.get(outgoing_book_signature_manager_6,seq_number)
[transform_precompute_exps.visit_exp] atomic exp: Array.get(outgoing_book_signature_manager_6,seq_number)
[transform_precompute_exps.visit_exp] exp: Array.get(outgoing_book_signature_manager_7,seq_number)
[transform_precompute_exps.visit_exp] atomic exp: Array.get(outgoing_book_signature_manager_7,seq_number)
[transform_precompute_exps.visit_exp] exp: BookSignatureManager_sign_ret
[transform_precompute_exps.visit_exp] atomic exp: BookSignatureManager_sign_ret
[transform_precompute_exps.visit_exp] exp: Sys.time()
[transform_precompute_exps.visit_exp] atomic exp: Sys.time()
[transform_precompute_exps.visit_exp] exp: [31 : 20]time_now
[transform_precompute_exps.visit_exp] atomic exp: [31 : 20]time_now
[transform_precompute_exps.visit_exp] exp: 32
[transform_precompute_exps.visit_exp] atomic exp: 32
[transform_precompute_exps.visit_exp] exp: Array.get(outgoing_metric_signature_manager_0,[3 : 0]timestamp)
[transform_precompute_exps.visit_exp] atomic exp: Array.get(outgoing_metric_signature_manager_0,[3 : 0]timestamp)
[transform_precompute_exps.visit_exp] exp: Array.get(outgoing_metric_signature_manager_1,[3 : 0]timestamp)
[transform_precompute_exps.visit_exp] atomic exp: Array.get(outgoing_metric_signature_manager_1,[3 : 0]timestamp)
[transform_precompute_exps.visit_exp] exp: Array.get(outgoing_metric_signature_manager_2,[3 : 0]timestamp)
[transform_precompute_exps.visit_exp] atomic exp: Array.get(outgoing_metric_signature_manager_2,[3 : 0]timestamp)
[transform_precompute_exps.visit_exp] exp: Array.get(outgoing_metric_signature_manager_3,[3 : 0]timestamp)
[transform_precompute_exps.visit_exp] atomic exp: Array.get(outgoing_metric_signature_manager_3,[3 : 0]timestamp)
[transform_precompute_exps.visit_exp] exp: Array.get(outgoing_metric_signature_manager_4,[3 : 0]timestamp)
[transform_precompute_exps.visit_exp] atomic exp: Array.get(outgoing_metric_signature_manager_4,[3 : 0]timestamp)
[transform_precompute_exps.visit_exp] exp: Array.get(outgoing_metric_signature_manager_5,[3 : 0]timestamp)
[transform_precompute_exps.visit_exp] atomic exp: Array.get(outgoing_metric_signature_manager_5,[3 : 0]timestamp)
[transform_precompute_exps.visit_exp] exp: Array.get(outgoing_metric_signature_manager_6,[3 : 0]timestamp)
[transform_precompute_exps.visit_exp] atomic exp: Array.get(outgoing_metric_signature_manager_6,[3 : 0]timestamp)
[transform_precompute_exps.visit_exp] exp: Array.get(outgoing_metric_signature_manager_7,[3 : 0]timestamp)
[transform_precompute_exps.visit_exp] atomic exp: Array.get(outgoing_metric_signature_manager_7,[3 : 0]timestamp)
[transform_precompute_exps.visit_exp] exp: MetricSignatureManager_sign_ret
[transform_precompute_exps.visit_exp] atomic exp: MetricSignatureManager_sign_ret
[transform_precompute_exps.visit_exp] exp: (int<<8>>)path_id
[transform_precompute_exps.visit_exp] atomic exp: (int<<8>>)path_id
[transform_precompute_exps.visit_exp] exp: (int<<16>>)timestamp
[transform_precompute_exps.visit_exp] atomic exp: (int<<16>>)timestamp
[transform_precompute_exps.visit_exp] exp: ts_signature
[transform_precompute_exps.visit_exp] atomic exp: ts_signature
[transform_precompute_exps.visit_exp] exp: seq_number
[transform_precompute_exps.visit_exp] atomic exp: seq_number
[transform_precompute_exps.visit_exp] exp: (int<<8>>)book_signature
[transform_precompute_exps.visit_exp] atomic exp: (int<<8>>)book_signature
[transform_precompute_exps.visit_exp] exp: forward_flow_ip_header_2+(int<<16>>)[7 : 4]forward_flow_ip_header_0^0+176
[transform_precompute_exps.visit_exp] atomic exp: to_immediate_tmp+176
[transform_precompute_exps.visit_exp] exp: forward_flow_eth_header_0
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_eth_header_0
[transform_precompute_exps.visit_exp] exp: forward_flow_eth_header_1
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_eth_header_1
[transform_precompute_exps.visit_exp] exp: forward_flow_eth_header_2
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_eth_header_2
[transform_precompute_exps.visit_exp] exp: tango_tunnel_hdr_0
[transform_precompute_exps.visit_exp] atomic exp: tango_tunnel_hdr_0
[transform_precompute_exps.visit_exp] exp: payload_len
[transform_precompute_exps.visit_exp] atomic exp: payload_len
[transform_precompute_exps.visit_exp] exp: tango_tunnel_hdr_2
[transform_precompute_exps.visit_exp] atomic exp: tango_tunnel_hdr_2
[transform_precompute_exps.visit_exp] exp: tango_tunnel_hdr_3
[transform_precompute_exps.visit_exp] atomic exp: tango_tunnel_hdr_3
[transform_precompute_exps.visit_exp] exp: tango_tunnel_hdr_4
[transform_precompute_exps.visit_exp] atomic exp: tango_tunnel_hdr_4
[transform_precompute_exps.visit_exp] exp: tango_tunnel_hdr_5
[transform_precompute_exps.visit_exp] atomic exp: tango_tunnel_hdr_5
[transform_precompute_exps.visit_exp] exp: tango_metrics_hdr_0
[transform_precompute_exps.visit_exp] atomic exp: tango_metrics_hdr_0
[transform_precompute_exps.visit_exp] exp: tango_metrics_hdr_1
[transform_precompute_exps.visit_exp] atomic exp: tango_metrics_hdr_1
[transform_precompute_exps.visit_exp] exp: tango_metrics_hdr_2
[transform_precompute_exps.visit_exp] atomic exp: tango_metrics_hdr_2
[transform_precompute_exps.visit_exp] exp: tango_metrics_hdr_3
[transform_precompute_exps.visit_exp] atomic exp: tango_metrics_hdr_3
[transform_precompute_exps.visit_exp] exp: tango_metrics_hdr_4
[transform_precompute_exps.visit_exp] atomic exp: tango_metrics_hdr_4
[transform_precompute_exps.visit_exp] exp: forward_flow_ip_header_0
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_ip_header_0
[transform_precompute_exps.visit_exp] exp: forward_flow_ip_header_1
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_ip_header_1
[transform_precompute_exps.visit_exp] exp: forward_flow_ip_header_2
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_ip_header_2
[transform_precompute_exps.visit_exp] exp: forward_flow_ip_header_3
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_ip_header_3
[transform_precompute_exps.visit_exp] exp: forward_flow_ip_header_4
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_ip_header_4
[transform_precompute_exps.visit_exp] exp: forward_flow_ip_header_5
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_ip_header_5
[transform_precompute_exps.visit_exp] exp: forward_flow_ip_header_6
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_ip_header_6
[transform_precompute_exps.visit_exp] exp: forward_flow_ip_header_7
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_ip_header_7
[transform_precompute_exps.visit_exp] exp: forward_flow_ip_header_8
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_ip_header_8
[transform_precompute_exps.visit_exp] exp: forward_flow_ip_header_9
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_ip_header_9
[transform_precompute_exps.visit_exp] exp: forward_flow_five_tuple_0
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_five_tuple_0
[transform_precompute_exps.visit_exp] exp: forward_flow_five_tuple_1
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_five_tuple_1
[transform_precompute_exps.visit_exp] exp: forward_flow_five_tuple_2
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_five_tuple_2
[transform_precompute_exps.visit_exp] exp: forward_flow_five_tuple_3
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_five_tuple_3
[transform_precompute_exps.visit_exp] exp: forward_flow_five_tuple_4
[transform_precompute_exps.visit_exp] atomic exp: forward_flow_five_tuple_4
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: 15
[transform_precompute_exps.visit_exp] atomic exp: 15
[transform_precompute_exps.visit_exp] exp: map_flow_to_traffic_class_ret
[transform_precompute_exps.visit_exp] atomic exp: map_flow_to_traffic_class_ret
[transform_precompute_exps.visit_exp] exp: incoming_tango_traffic_tango_eth_header_0
[transform_precompute_exps.visit_exp] atomic exp: incoming_tango_traffic_tango_eth_header_0
[transform_precompute_exps.visit_exp] exp: incoming_tango_traffic_tango_eth_header_1
[transform_precompute_exps.visit_exp] atomic exp: incoming_tango_traffic_tango_eth_header_1
[transform_precompute_exps.visit_exp] exp: incoming_tango_traffic_tango_eth_header_2
[transform_precompute_exps.visit_exp] atomic exp: incoming_tango_traffic_tango_eth_header_2
[transform_precompute_exps.visit_exp] exp: incoming_tango_traffic_encaped_ip_header_0
[transform_precompute_exps.visit_exp] atomic exp: incoming_tango_traffic_encaped_ip_header_0
[transform_precompute_exps.visit_exp] exp: incoming_tango_traffic_encaped_ip_header_1
[transform_precompute_exps.visit_exp] atomic exp: incoming_tango_traffic_encaped_ip_header_1
[transform_precompute_exps.visit_exp] exp: incoming_tango_traffic_encaped_ip_header_2
[transform_precompute_exps.visit_exp] atomic exp: incoming_tango_traffic_encaped_ip_header_2
[transform_precompute_exps.visit_exp] exp: incoming_tango_traffic_encaped_ip_header_3
[transform_precompute_exps.visit_exp] atomic exp: incoming_tango_traffic_encaped_ip_header_3
[transform_precompute_exps.visit_exp] exp: incoming_tango_traffic_encaped_ip_header_4
[transform_precompute_exps.visit_exp] atomic exp: incoming_tango_traffic_encaped_ip_header_4
[transform_precompute_exps.visit_exp] exp: incoming_tango_traffic_encaped_ip_header_5
[transform_precompute_exps.visit_exp] atomic exp: incoming_tango_traffic_encaped_ip_header_5
[transform_precompute_exps.visit_exp] exp: incoming_tango_traffic_encaped_ip_header_6
[transform_precompute_exps.visit_exp] atomic exp: incoming_tango_traffic_encaped_ip_header_6
[transform_precompute_exps.visit_exp] exp: incoming_tango_traffic_encaped_ip_header_7
[transform_precompute_exps.visit_exp] atomic exp: incoming_tango_traffic_encaped_ip_header_7
[transform_precompute_exps.visit_exp] exp: incoming_tango_traffic_encaped_ip_header_8
[transform_precompute_exps.visit_exp] atomic exp: incoming_tango_traffic_encaped_ip_header_8
[transform_precompute_exps.visit_exp] exp: incoming_tango_traffic_encaped_ip_header_9
[transform_precompute_exps.visit_exp] atomic exp: incoming_tango_traffic_encaped_ip_header_9
[transform_precompute_exps.visit_exp] exp: [2 : 0]incoming_tango_traffic_tango_metrics_header_0
[transform_precompute_exps.visit_exp] atomic exp: [2 : 0]incoming_tango_traffic_tango_metrics_header_0
[transform_precompute_exps.visit_exp] exp: [0 : 0]incoming_tango_traffic_tango_metrics_header_4
[transform_precompute_exps.visit_exp] atomic exp: [0 : 0]incoming_tango_traffic_tango_metrics_header_4
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: (int<<32>>)Array.get(incoming_book_signature_manager_0,incoming_tango_traffic_tango_metrics_header_3)-(int<<32>>)signature
[transform_precompute_exps.visit_exp] atomic exp: (int<<32>>)to_immediate_tmp-(int<<32>>)signature
[transform_precompute_exps.visit_exp] exp: 1
[transform_precompute_exps.visit_exp] atomic exp: 1
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: (int<<32>>)Array.get(incoming_book_signature_manager_1,incoming_tango_traffic_tango_metrics_header_3)-(int<<32>>)signature
[transform_precompute_exps.visit_exp] atomic exp: (int<<32>>)to_immediate_tmp-(int<<32>>)signature
[transform_precompute_exps.visit_exp] exp: 1
[transform_precompute_exps.visit_exp] atomic exp: 1
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: (int<<32>>)Array.get(incoming_book_signature_manager_2,incoming_tango_traffic_tango_metrics_header_3)-(int<<32>>)signature
[transform_precompute_exps.visit_exp] atomic exp: (int<<32>>)to_immediate_tmp-(int<<32>>)signature
[transform_precompute_exps.visit_exp] exp: 1
[transform_precompute_exps.visit_exp] atomic exp: 1
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: (int<<32>>)Array.get(incoming_book_signature_manager_3,incoming_tango_traffic_tango_metrics_header_3)-(int<<32>>)signature
[transform_precompute_exps.visit_exp] atomic exp: (int<<32>>)to_immediate_tmp-(int<<32>>)signature
[transform_precompute_exps.visit_exp] exp: 1
[transform_precompute_exps.visit_exp] atomic exp: 1
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: (int<<32>>)Array.get(incoming_book_signature_manager_4,incoming_tango_traffic_tango_metrics_header_3)-(int<<32>>)signature
[transform_precompute_exps.visit_exp] atomic exp: (int<<32>>)to_immediate_tmp-(int<<32>>)signature
[transform_precompute_exps.visit_exp] exp: 1
[transform_precompute_exps.visit_exp] atomic exp: 1
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: (int<<32>>)Array.get(incoming_book_signature_manager_5,incoming_tango_traffic_tango_metrics_header_3)-(int<<32>>)signature
[transform_precompute_exps.visit_exp] atomic exp: (int<<32>>)to_immediate_tmp-(int<<32>>)signature
[transform_precompute_exps.visit_exp] exp: 1
[transform_precompute_exps.visit_exp] atomic exp: 1
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: (int<<32>>)Array.get(incoming_book_signature_manager_6,incoming_tango_traffic_tango_metrics_header_3)-(int<<32>>)signature
[transform_precompute_exps.visit_exp] atomic exp: (int<<32>>)to_immediate_tmp-(int<<32>>)signature
[transform_precompute_exps.visit_exp] exp: 1
[transform_precompute_exps.visit_exp] atomic exp: 1
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: (int<<32>>)Array.get(incoming_book_signature_manager_7,incoming_tango_traffic_tango_metrics_header_3)-(int<<32>>)signature
[transform_precompute_exps.visit_exp] atomic exp: (int<<32>>)to_immediate_tmp-(int<<32>>)signature
[transform_precompute_exps.visit_exp] exp: 1
[transform_precompute_exps.visit_exp] atomic exp: 1
[transform_precompute_exps.visit_exp] exp: BookSignatureManager_verify_ret
[transform_precompute_exps.visit_exp] atomic exp: BookSignatureManager_verify_ret
[transform_precompute_exps.visit_exp] exp: [11 : 0]incoming_tango_traffic_tango_metrics_header_1
[transform_precompute_exps.visit_exp] atomic exp: [11 : 0]incoming_tango_traffic_tango_metrics_header_1
[transform_precompute_exps.visit_exp] exp: [2 : 0]incoming_tango_traffic_tango_metrics_header_0
[transform_precompute_exps.visit_exp] atomic exp: [2 : 0]incoming_tango_traffic_tango_metrics_header_0
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: Array.get(incoming_metric_signature_manager_0,[3 : 0]timestamp)-incoming_tango_traffic_tango_metrics_header_2
[transform_precompute_exps.visit_exp] atomic exp: to_immediate_tmp-incoming_tango_traffic_tango_metrics_header_2
[transform_precompute_exps.visit_exp] exp: 1
[transform_precompute_exps.visit_exp] atomic exp: 1
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: Array.get(incoming_metric_signature_manager_1,[3 : 0]timestamp)-incoming_tango_traffic_tango_metrics_header_2
[transform_precompute_exps.visit_exp] atomic exp: to_immediate_tmp-incoming_tango_traffic_tango_metrics_header_2
[transform_precompute_exps.visit_exp] exp: 1
[transform_precompute_exps.visit_exp] atomic exp: 1
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: Array.get(incoming_metric_signature_manager_2,[3 : 0]timestamp)-incoming_tango_traffic_tango_metrics_header_2
[transform_precompute_exps.visit_exp] atomic exp: to_immediate_tmp-incoming_tango_traffic_tango_metrics_header_2
[transform_precompute_exps.visit_exp] exp: 1
[transform_precompute_exps.visit_exp] atomic exp: 1
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: Array.get(incoming_metric_signature_manager_3,[3 : 0]timestamp)-incoming_tango_traffic_tango_metrics_header_2
[transform_precompute_exps.visit_exp] atomic exp: to_immediate_tmp-incoming_tango_traffic_tango_metrics_header_2
[transform_precompute_exps.visit_exp] exp: 1
[transform_precompute_exps.visit_exp] atomic exp: 1
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: Array.get(incoming_metric_signature_manager_4,[3 : 0]timestamp)-incoming_tango_traffic_tango_metrics_header_2
[transform_precompute_exps.visit_exp] atomic exp: to_immediate_tmp-incoming_tango_traffic_tango_metrics_header_2
[transform_precompute_exps.visit_exp] exp: 1
[transform_precompute_exps.visit_exp] atomic exp: 1
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: Array.get(incoming_metric_signature_manager_5,[3 : 0]timestamp)-incoming_tango_traffic_tango_metrics_header_2
[transform_precompute_exps.visit_exp] atomic exp: to_immediate_tmp-incoming_tango_traffic_tango_metrics_header_2
[transform_precompute_exps.visit_exp] exp: 1
[transform_precompute_exps.visit_exp] atomic exp: 1
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: Array.get(incoming_metric_signature_manager_6,[3 : 0]timestamp)-incoming_tango_traffic_tango_metrics_header_2
[transform_precompute_exps.visit_exp] atomic exp: to_immediate_tmp-incoming_tango_traffic_tango_metrics_header_2
[transform_precompute_exps.visit_exp] exp: 1
[transform_precompute_exps.visit_exp] atomic exp: 1
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: Array.get(incoming_metric_signature_manager_7,[3 : 0]timestamp)-incoming_tango_traffic_tango_metrics_header_2
[transform_precompute_exps.visit_exp] atomic exp: to_immediate_tmp-incoming_tango_traffic_tango_metrics_header_2
[transform_precompute_exps.visit_exp] exp: 1
[transform_precompute_exps.visit_exp] atomic exp: 1
[transform_precompute_exps.visit_exp] exp: MetricSignatureManager_verify_ret
[transform_precompute_exps.visit_exp] atomic exp: MetricSignatureManager_verify_ret
[transform_precompute_exps.visit_exp] exp: [2 : 0]incoming_tango_traffic_tango_metrics_header_0
[transform_precompute_exps.visit_exp] atomic exp: [2 : 0]incoming_tango_traffic_tango_metrics_header_0
[transform_precompute_exps.visit_exp] exp: [2 : 0]incoming_tango_traffic_tango_metrics_header_0
[transform_precompute_exps.visit_exp] atomic exp: [2 : 0]incoming_tango_traffic_tango_metrics_header_0
[transform_precompute_exps.visit_exp] exp: 32
[transform_precompute_exps.visit_exp] atomic exp: 32
[transform_precompute_exps.visit_exp] exp: Array.update(metric_avg_tracker_0,path_id,MetricAverageTracker_get_curr,0,MetricAverageTracker_next,0)
[transform_precompute_exps.visit_exp] atomic exp: Array.update(metric_avg_tracker_0,path_id,MetricAverageTracker_get_curr,0,MetricAverageTracker_next,0)
[transform_precompute_exps.visit_exp] exp: (int<<32>>)MetricAverageTracker_increment_ret
[transform_precompute_exps.visit_exp] atomic exp: (int<<32>>)MetricAverageTracker_increment_ret
[transform_precompute_exps.visit_exp] exp: [2 : 0]incoming_tango_traffic_tango_metrics_header_0
[transform_precompute_exps.visit_exp] atomic exp: [2 : 0]incoming_tango_traffic_tango_metrics_header_0
[transform_precompute_exps.visit_exp] exp: 32
[transform_precompute_exps.visit_exp] atomic exp: 32
[transform_precompute_exps.visit_exp] exp: (int<<32>>)Array.update(loss_metrics_manager_0,path_id,LossMetricsManager_calc_loss,incoming_tango_traffic_tango_metrics_header_3,LossMetricsManager_store_larger,incoming_tango_traffic_tango_metrics_header_3)
[transform_precompute_exps.visit_exp] atomic exp: (int<<32>>)to_immediate_tmp
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: avg_count|-|62
[transform_precompute_exps.visit_exp] atomic exp: avg_count|-|62
[transform_precompute_exps.visit_exp] exp: Array.update(loss_metrics_manager_1,path_id,LossMetricsManager_get_loss_sum,loss_found,LossMetricsManager_reset_loss_sum,0)
[transform_precompute_exps.visit_exp] atomic exp: Array.update(loss_metrics_manager_1,path_id,LossMetricsManager_get_loss_sum,loss_found,LossMetricsManager_reset_loss_sum,0)
[transform_precompute_exps.visit_exp] exp: Array.update(loss_metrics_manager_1,path_id,LossMetricsManager_get_loss_sum,loss_found,LossMetricsManager_get_loss_sum,loss_found)
[transform_precompute_exps.visit_exp] atomic exp: Array.update(loss_metrics_manager_1,path_id,LossMetricsManager_get_loss_sum,loss_found,LossMetricsManager_get_loss_sum,loss_found)
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: avg_count|-|62
[transform_precompute_exps.visit_exp] atomic exp: avg_count|-|62
[transform_precompute_exps.visit_exp] exp: curr_loss_sum
[transform_precompute_exps.visit_exp] atomic exp: curr_loss_sum
[transform_precompute_exps.visit_exp] exp: Array.get(loss_metrics_manager_2,path_id)
[transform_precompute_exps.visit_exp] atomic exp: Array.get(loss_metrics_manager_2,path_id)
[transform_precompute_exps.visit_exp] exp: avg_loss
[transform_precompute_exps.visit_exp] atomic exp: avg_loss
[transform_precompute_exps.visit_exp] exp: LossMetricsManager_update_loss_ret
[transform_precompute_exps.visit_exp] atomic exp: LossMetricsManager_update_loss_ret
[transform_precompute_exps.visit_exp] exp: [11 : 0]incoming_tango_traffic_tango_metrics_header_1
[transform_precompute_exps.visit_exp] atomic exp: [11 : 0]incoming_tango_traffic_tango_metrics_header_1
[transform_precompute_exps.visit_exp] exp: [2 : 0]incoming_tango_traffic_tango_metrics_header_0
[transform_precompute_exps.visit_exp] atomic exp: [2 : 0]incoming_tango_traffic_tango_metrics_header_0
[transform_precompute_exps.visit_exp] exp: 32
[transform_precompute_exps.visit_exp] atomic exp: 32
[transform_precompute_exps.visit_exp] exp: Sys.time()
[transform_precompute_exps.visit_exp] atomic exp: Sys.time()
[transform_precompute_exps.visit_exp] exp: [31 : 20]time_now
[transform_precompute_exps.visit_exp] atomic exp: [31 : 20]time_now
[transform_precompute_exps.visit_exp] exp: (int<<32>>)curr_time-timestamp
[transform_precompute_exps.visit_exp] atomic exp: (int<<32>>)to_immediate_tmp
[transform_precompute_exps.visit_exp] exp: 0
[transform_precompute_exps.visit_exp] atomic exp: 0
[transform_precompute_exps.visit_exp] exp: avg_count|-|62
[transform_precompute_exps.visit_exp] atomic exp: avg_count|-|62
[transform_precompute_exps.visit_exp] exp: Array.update(delay_metrics_manager_0,path_id,DelayMetricsManager_get_delay_sum,new_delay,DelayMetricsManager_reset_delay_sum,0)
[transform_precompute_exps.visit_exp] atomic exp: Array.update(delay_metrics_manager_0,path_id,DelayMetricsManager_get_delay_sum,new_delay,DelayMetricsManager_reset_delay_sum,0)
[transform_precompute_exps.visit_exp] exp: Array.update(delay_metrics_manager_0,path_id,DelayMetricsManager_get_delay_sum,new_delay,DelayMetricsManager_get_delay_sum,new_delay)
[transform_precompute_exps.visit_exp] atomic exp: Array.update(delay_metrics_manager_0,path_id,DelayMetricsManager_get_delay_sum,new_delay,DelayMetricsManager_get_delay_sum,new_delay)
[transform_precompute_exps.visit_exp] exp: Array.update_complex(delay_metrics_manager_1,path_id,DelayMetricsManager_update_delay_avg,delay_sum,avg_count,0)
[transform_precompute_exps.visit_exp] atomic exp: Array.update_complex(delay_metrics_manager_1,path_id,DelayMetricsManager_update_delay_avg,delay_sum,avg_count,0)
[transform_precompute_exps.visit_exp] exp: delay_avg
[transform_precompute_exps.visit_exp] atomic exp: delay_avg
[transform_precompute_exps.visit_exp] exp: DelayMetricsManager_update_delay_ret
[transform_precompute_exps.visit_exp] atomic exp: DelayMetricsManager_update_delay_ret
[transform_precompute_exps.visit_exp] exp: incoming_tango_traffic_tango_eth_header_0
[transform_precompute_exps.visit_exp] atomic exp: incoming_tango_traffic_tango_eth_header_0
[transform_precompute_exps.visit_exp] exp: incoming_tango_traffic_tango_eth_header_1
[transform_precompute_exps.visit_exp] atomic exp: incoming_tango_traffic_tango_eth_header_1
[transform_precompute_exps.visit_exp] exp: incoming_tango_traffic_tango_eth_header_2
[transform_precompute_exps.visit_exp] atomic exp: incoming_tango_traffic_tango_eth_header_2
[transform_precompute_exps.visit_exp] exp: incoming_tango_traffic_encaped_ip_header_0
[transform_precompute_exps.visit_exp] atomic exp: incoming_tango_traffic_encaped_ip_header_0
[transform_precompute_exps.visit_exp] exp: incoming_tango_traffic_encaped_ip_header_1
[transform_precompute_exps.visit_exp] atomic exp: incoming_tango_traffic_encaped_ip_header_1
[transform_precompute_exps.visit_exp] exp: incoming_tango_traffic_encaped_ip_header_2
[transform_precompute_exps.visit_exp] atomic exp: incoming_tango_traffic_encaped_ip_header_2
[transform_precompute_exps.visit_exp] exp: incoming_tango_traffic_encaped_ip_header_3
[transform_precompute_exps.visit_exp] atomic exp: incoming_tango_traffic_encaped_ip_header_3
[transform_precompute_exps.visit_exp] exp: incoming_tango_traffic_encaped_ip_header_4
[transform_precompute_exps.visit_exp] atomic exp: incoming_tango_traffic_encaped_ip_header_4
[transform_precompute_exps.visit_exp] exp: incoming_tango_traffic_encaped_ip_header_5
[transform_precompute_exps.visit_exp] atomic exp: incoming_tango_traffic_encaped_ip_header_5
[transform_precompute_exps.visit_exp] exp: incoming_tango_traffic_encaped_ip_header_6
[transform_precompute_exps.visit_exp] atomic exp: incoming_tango_traffic_encaped_ip_header_6
[transform_precompute_exps.visit_exp] exp: incoming_tango_traffic_encaped_ip_header_7
[transform_precompute_exps.visit_exp] atomic exp: incoming_tango_traffic_encaped_ip_header_7
[transform_precompute_exps.visit_exp] exp: incoming_tango_traffic_encaped_ip_header_8
[transform_precompute_exps.visit_exp] atomic exp: incoming_tango_traffic_encaped_ip_header_8
[transform_precompute_exps.visit_exp] exp: incoming_tango_traffic_encaped_ip_header_9
[transform_precompute_exps.visit_exp] atomic exp: incoming_tango_traffic_encaped_ip_header_9
original program: 
memop MetricAverageTracker_next(int<<32>> curr,int<<32>> ignore)
 {return curr+1;
}

memop MetricAverageTracker_get_curr(int<<32>> curr,int<<32>> ignore)
 {return curr;
}

memop LossMetricsManager_get_loss_sum(int<<32>> curr_loss_sum,int<<32>> new_loss)
 {return curr_loss_sum+new_loss;
}

memop LossMetricsManager_reset_loss_sum(int<<32>> curr_loss_sum,int<<32>> new_loss)
 {return 0;
}

memop LossMetricsManager_update_loss_avg(int<<32>> curr_loss_avg,int<<32>> loss_sum,int<<32>> avg_counter)
 {{
b1=(should_reset,avg_counter>62);
b2=None
cell1=(should_reset -> loss_sum), None
cell2=None, None

ret=(true -> cell1)
}}

memop LossMetricsManager_store_larger(int<<32>> curr_seq_num,int<<32>> new_seq_num)
 {if curr_seq_num<new_seq_num then new_seq_num else curr_seq_num}

memop LossMetricsManager_calc_loss(int<<32>> curr_seq_num,int<<32>> new_seq_num)
 {if curr_seq_num+1<new_seq_num then new_seq_num-curr_seq_num else 0}

memop DelayMetricsManager_update_delay_avg(int<<32>> curr_delay_avg,int<<32>> delay_sum,int<<32>> curr_count)
 {{
b1=(should_reset,curr_count>62);
b2=None
cell1=(should_reset -> delay_sum), None
cell2=None, None

ret=(true -> cell1)
}}

memop DelayMetricsManager_get_delay_sum(int<<32>> curr_delay_sum,int<<32>> new_delay)
 {return curr_delay_sum+new_delay;
}

memop DelayMetricsManager_reset_delay_sum(int<<32>> curr_delay_sum,int<<32>> new_delay)
 {return 0;
}

memop SequenceNumberManager_next(int<<32>> curr,int<<32>> ignore)
 {return curr+1;
}

memop InvalidPacketManager_increment(int<<32>> curr,int<<32>> inc_by)
 {return curr+inc_by;
}

global Array.t<<3>> route_manager_0 = Array.create(16);


global Array.t<<24>> sequence_counters_0 = Array.create(8);


global Array.t<<1>> incoming_book_signature_manager_0 = Array.create(65536);


global Array.t<<1>> incoming_book_signature_manager_1 = Array.create(65536);


global Array.t<<1>> incoming_book_signature_manager_2 = Array.create(65536);


global Array.t<<1>> incoming_book_signature_manager_3 = Array.create(65536);


global Array.t<<1>> incoming_book_signature_manager_4 = Array.create(65536);


global Array.t<<1>> incoming_book_signature_manager_5 = Array.create(65536);


global Array.t<<1>> incoming_book_signature_manager_6 = Array.create(65536);


global Array.t<<1>> incoming_book_signature_manager_7 = Array.create(65536);


global Array.t<<32>> incoming_metric_signature_manager_0 = Array.create(16);


global Array.t<<32>> incoming_metric_signature_manager_1 = Array.create(16);


global Array.t<<32>> incoming_metric_signature_manager_2 = Array.create(16);


global Array.t<<32>> incoming_metric_signature_manager_3 = Array.create(16);


global Array.t<<32>> incoming_metric_signature_manager_4 = Array.create(16);


global Array.t<<32>> incoming_metric_signature_manager_5 = Array.create(16);


global Array.t<<32>> incoming_metric_signature_manager_6 = Array.create(16);


global Array.t<<32>> incoming_metric_signature_manager_7 = Array.create(16);


global Array.t<<1>> outgoing_book_signature_manager_0 = Array.create(65536);


global Array.t<<1>> outgoing_book_signature_manager_1 = Array.create(65536);


global Array.t<<1>> outgoing_book_signature_manager_2 = Array.create(65536);


global Array.t<<1>> outgoing_book_signature_manager_3 = Array.create(65536);


global Array.t<<1>> outgoing_book_signature_manager_4 = Array.create(65536);


global Array.t<<1>> outgoing_book_signature_manager_5 = Array.create(65536);


global Array.t<<1>> outgoing_book_signature_manager_6 = Array.create(65536);


global Array.t<<1>> outgoing_book_signature_manager_7 = Array.create(65536);


global Array.t<<32>> outgoing_metric_signature_manager_0 = Array.create(16);


global Array.t<<32>> outgoing_metric_signature_manager_1 = Array.create(16);


global Array.t<<32>> outgoing_metric_signature_manager_2 = Array.create(16);


global Array.t<<32>> outgoing_metric_signature_manager_3 = Array.create(16);


global Array.t<<32>> outgoing_metric_signature_manager_4 = Array.create(16);


global Array.t<<32>> outgoing_metric_signature_manager_5 = Array.create(16);


global Array.t<<32>> outgoing_metric_signature_manager_6 = Array.create(16);


global Array.t<<32>> outgoing_metric_signature_manager_7 = Array.create(16);


global Array.t<<6>> metric_avg_tracker_0 = Array.create(8);


global Array.t<<24>> loss_metrics_manager_0 = Array.create(8);


global Array.t<<32>> loss_metrics_manager_1 = Array.create(8);


global Array.t<<32>> loss_metrics_manager_2 = Array.create(8);


global Array.t<<32>> delay_metrics_manager_0 = Array.create(8);


global Array.t<<32>> delay_metrics_manager_1 = Array.create(8);


global Array.t<<32>> invalid_pkt_manager_0 = Array.create(8);


entry event forward_flow(int<<48>> forward_flow_eth_header_0,int<<48>> forward_flow_eth_header_1,int<<16>> forward_flow_eth_header_2,int<<8>> forward_flow_ip_header_0,int<<8>> forward_flow_ip_header_1,int<<16>> forward_flow_ip_header_2,int<<16>> forward_flow_ip_header_3,int<<16>> forward_flow_ip_header_4,int<<8>> forward_flow_ip_header_5,int<<8>> forward_flow_ip_header_6,int<<16>> forward_flow_ip_header_7,int<<32>> forward_flow_ip_header_8,int<<32>> forward_flow_ip_header_9,int<<32>> forward_flow_five_tuple_0,int<<32>> forward_flow_five_tuple_1,int<<16>> forward_flow_five_tuple_2,int<<16>> forward_flow_five_tuple_3,int<<8>> forward_flow_five_tuple_4);

event complete_forward(int<<48>> complete_forward_eth_header_0,int<<48>> complete_forward_eth_header_1,int<<16>> complete_forward_eth_header_2,int<<8>> complete_forward_ip_header_0,int<<8>> complete_forward_ip_header_1,int<<16>> complete_forward_ip_header_2,int<<16>> complete_forward_ip_header_3,int<<16>> complete_forward_ip_header_4,int<<8>> complete_forward_ip_header_5,int<<8>> complete_forward_ip_header_6,int<<16>> complete_forward_ip_header_7,int<<32>> complete_forward_ip_header_8,int<<32>> complete_forward_ip_header_9);

handle complete_forward(int<<48>> complete_forward_eth_header_0,int<<48>> complete_forward_eth_header_1,int<<16>> complete_forward_eth_header_2,int<<8>> complete_forward_ip_header_0,int<<8>> complete_forward_ip_header_1,int<<16>> complete_forward_ip_header_2,int<<16>> complete_forward_ip_header_3,int<<16>> complete_forward_ip_header_4,int<<8>> complete_forward_ip_header_5,int<<8>> complete_forward_ip_header_6,int<<16>> complete_forward_ip_header_7,int<<32>> complete_forward_ip_header_8,int<<32>> complete_forward_ip_header_9) {

}

event incoming_tango_traffic(int<<48>> incoming_tango_traffic_tango_eth_header_0,int<<48>> incoming_tango_traffic_tango_eth_header_1,int<<16>> incoming_tango_traffic_tango_eth_header_2,int<<32>> incoming_tango_traffic_tango_ip_header_0,int<<16>> incoming_tango_traffic_tango_ip_header_1,int<<8>> incoming_tango_traffic_tango_ip_header_2,int<<8>> incoming_tango_traffic_tango_ip_header_3,int<<128>> incoming_tango_traffic_tango_ip_header_4,int<<128>> incoming_tango_traffic_tango_ip_header_5,int<<8>> incoming_tango_traffic_tango_metrics_header_0,int<<16>> incoming_tango_traffic_tango_metrics_header_1,int<<32>> incoming_tango_traffic_tango_metrics_header_2,int<<24>> incoming_tango_traffic_tango_metrics_header_3,int<<8>> incoming_tango_traffic_tango_metrics_header_4,int<<8>> incoming_tango_traffic_encaped_ip_header_0,int<<8>> incoming_tango_traffic_encaped_ip_header_1,int<<16>> incoming_tango_traffic_encaped_ip_header_2,int<<16>> incoming_tango_traffic_encaped_ip_header_3,int<<16>> incoming_tango_traffic_encaped_ip_header_4,int<<8>> incoming_tango_traffic_encaped_ip_header_5,int<<8>> incoming_tango_traffic_encaped_ip_header_6,int<<16>> incoming_tango_traffic_encaped_ip_header_7,int<<32>> incoming_tango_traffic_encaped_ip_header_8,int<<32>> incoming_tango_traffic_encaped_ip_header_9,int<<32>> incoming_tango_traffic_encaped_five_tuple_0,int<<32>> incoming_tango_traffic_encaped_five_tuple_1,int<<16>> incoming_tango_traffic_encaped_five_tuple_2,int<<16>> incoming_tango_traffic_encaped_five_tuple_3,int<<8>> incoming_tango_traffic_encaped_five_tuple_4);

handle forward_flow(int<<48>> forward_flow_eth_header_0,int<<48>> forward_flow_eth_header_1,int<<16>> forward_flow_eth_header_2,int<<8>> forward_flow_ip_header_0,int<<8>> forward_flow_ip_header_1,int<<16>> forward_flow_ip_header_2,int<<16>> forward_flow_ip_header_3,int<<16>> forward_flow_ip_header_4,int<<8>> forward_flow_ip_header_5,int<<8>> forward_flow_ip_header_6,int<<16>> forward_flow_ip_header_7,int<<32>> forward_flow_ip_header_8,int<<32>> forward_flow_ip_header_9,int<<32>> forward_flow_five_tuple_0,int<<32>> forward_flow_five_tuple_1,int<<16>> forward_flow_five_tuple_2,int<<16>> forward_flow_five_tuple_3,int<<8>> forward_flow_five_tuple_4) {
int<<4>> map_flow_to_traffic_class_ret = 0;
match (forward_flow_five_tuple_0,forward_flow_five_tuple_2,forward_flow_five_tuple_1,forward_flow_five_tuple_3,forward_flow_five_tuple_4) with 
| _,_,_,_,_ -> {
map_flow_to_traffic_class_ret = 15;
}
int<<4>> traffic_class = map_flow_to_traffic_class_ret;
if (traffic_class==15) {
int<<48>> tunneled_arg_0 = forward_flow_eth_header_0;
int<<48>> tunneled_arg_1 = forward_flow_eth_header_1;
int<<16>> tunneled_arg_2 = forward_flow_eth_header_2;
int<<8>> tunneled_arg_3 = forward_flow_ip_header_0;
int<<8>> tunneled_arg_4 = forward_flow_ip_header_1;
int<<16>> tunneled_arg_5 = forward_flow_ip_header_2;
int<<16>> tunneled_arg_6 = forward_flow_ip_header_3;
int<<16>> tunneled_arg_7 = forward_flow_ip_header_4;
int<<8>> tunneled_arg_8 = forward_flow_ip_header_5;
int<<8>> tunneled_arg_9 = forward_flow_ip_header_6;
int<<16>> tunneled_arg_10 = forward_flow_ip_header_7;
int<<32>> tunneled_arg_11 = forward_flow_ip_header_8;
int<<32>> tunneled_arg_12 = forward_flow_ip_header_9;
generate_port (2, complete_forward(tunneled_arg_0,tunneled_arg_1,tunneled_arg_2,tunneled_arg_3,tunneled_arg_4,tunneled_arg_5,tunneled_arg_6,tunneled_arg_7,tunneled_arg_8,tunneled_arg_9,tunneled_arg_10,tunneled_arg_11,tunneled_arg_12));
} else {
int<<3>> RouteManager_get_path_id_ret = 0;
RouteManager_get_path_id_ret = Array.get(route_manager_0,traffic_class);
int<<3>> path_id = RouteManager_get_path_id_ret;
int<<32>> map_path_to_tunnel_header_ret_0 = 32;
int<<16>> map_path_to_tunnel_header_ret_1 = 32;
int<<8>> map_path_to_tunnel_header_ret_2 = 32;
int<<8>> map_path_to_tunnel_header_ret_3 = 32;
int<<128>> map_path_to_tunnel_header_ret_4 = 32;
int<<128>> map_path_to_tunnel_header_ret_5 = 32;
match path_id with 
| _ -> {
map_path_to_tunnel_header_ret_0 = 0;
map_path_to_tunnel_header_ret_1 = 0;
map_path_to_tunnel_header_ret_2 = 0;
map_path_to_tunnel_header_ret_3 = 0;
map_path_to_tunnel_header_ret_4 = 0;
map_path_to_tunnel_header_ret_5 = 0;
}
int<<32>> tango_tunnel_hdr_0 = map_path_to_tunnel_header_ret_0;
int<<16>> tango_tunnel_hdr_1 = map_path_to_tunnel_header_ret_1;
int<<8>> tango_tunnel_hdr_2 = map_path_to_tunnel_header_ret_2;
int<<8>> tango_tunnel_hdr_3 = map_path_to_tunnel_header_ret_3;
int<<128>> tango_tunnel_hdr_4 = map_path_to_tunnel_header_ret_4;
int<<128>> tango_tunnel_hdr_5 = map_path_to_tunnel_header_ret_5;
int<<24>> SequenceNumberManager_increment_ret = 32;
SequenceNumberManager_increment_ret = Array.update(sequence_counters_0,path_id,SequenceNumberManager_next,0,SequenceNumberManager_next,0);
int<<24>> seq_number = SequenceNumberManager_increment_ret;
int<<1>> BookSignatureManager_sign_ret = 0;
match path_id with 
| 0 -> {
BookSignatureManager_sign_ret = Array.get(outgoing_book_signature_manager_0,seq_number);
}
| 1 -> {
BookSignatureManager_sign_ret = Array.get(outgoing_book_signature_manager_1,seq_number);
}
| 2 -> {
BookSignatureManager_sign_ret = Array.get(outgoing_book_signature_manager_2,seq_number);
}
| 3 -> {
BookSignatureManager_sign_ret = Array.get(outgoing_book_signature_manager_3,seq_number);
}
| 4 -> {
BookSignatureManager_sign_ret = Array.get(outgoing_book_signature_manager_4,seq_number);
}
| 5 -> {
BookSignatureManager_sign_ret = Array.get(outgoing_book_signature_manager_5,seq_number);
}
| 6 -> {
BookSignatureManager_sign_ret = Array.get(outgoing_book_signature_manager_6,seq_number);
}
| 7 -> {
BookSignatureManager_sign_ret = Array.get(outgoing_book_signature_manager_7,seq_number);
}
| _ -> {

}
int<<1>> book_signature = BookSignatureManager_sign_ret;
int<<32>> time_now = Sys.time();
int<<12>> timestamp = [31 : 20]time_now;
int<<32>> MetricSignatureManager_sign_ret = 32;
match path_id with 
| 0 -> {
MetricSignatureManager_sign_ret = Array.get(outgoing_metric_signature_manager_0,[3 : 0]timestamp);
}
| 1 -> {
MetricSignatureManager_sign_ret = Array.get(outgoing_metric_signature_manager_1,[3 : 0]timestamp);
}
| 2 -> {
MetricSignatureManager_sign_ret = Array.get(outgoing_metric_signature_manager_2,[3 : 0]timestamp);
}
| 3 -> {
MetricSignatureManager_sign_ret = Array.get(outgoing_metric_signature_manager_3,[3 : 0]timestamp);
}
| 4 -> {
MetricSignatureManager_sign_ret = Array.get(outgoing_metric_signature_manager_4,[3 : 0]timestamp);
}
| 5 -> {
MetricSignatureManager_sign_ret = Array.get(outgoing_metric_signature_manager_5,[3 : 0]timestamp);
}
| 6 -> {
MetricSignatureManager_sign_ret = Array.get(outgoing_metric_signature_manager_6,[3 : 0]timestamp);
}
| 7 -> {
MetricSignatureManager_sign_ret = Array.get(outgoing_metric_signature_manager_7,[3 : 0]timestamp);
}
| _ -> {

}
int<<32>> ts_signature = MetricSignatureManager_sign_ret;
int<<8>> tango_metrics_hdr_0 = (int<<8>>)path_id;
int<<16>> tango_metrics_hdr_1 = (int<<16>>)timestamp;
int<<32>> tango_metrics_hdr_2 = ts_signature;
int<<24>> tango_metrics_hdr_3 = seq_number;
int<<8>> tango_metrics_hdr_4 = (int<<8>>)book_signature;
int<<16>> payload_len = 176+(int<<16>>)[7 : 4]forward_flow_ip_header_0^0+forward_flow_ip_header_2;
int<<48>> forward_tango_pkt_arg_0 = forward_flow_eth_header_0;
int<<48>> forward_tango_pkt_arg_1 = forward_flow_eth_header_1;
int<<16>> forward_tango_pkt_arg_2 = forward_flow_eth_header_2;
int<<32>> forward_tango_pkt_arg_3 = tango_tunnel_hdr_0;
int<<16>> forward_tango_pkt_arg_4 = payload_len;
int<<8>> forward_tango_pkt_arg_5 = tango_tunnel_hdr_2;
int<<8>> forward_tango_pkt_arg_6 = tango_tunnel_hdr_3;
int<<128>> forward_tango_pkt_arg_7 = tango_tunnel_hdr_4;
int<<128>> forward_tango_pkt_arg_8 = tango_tunnel_hdr_5;
int<<8>> forward_tango_pkt_arg_9 = tango_metrics_hdr_0;
int<<16>> forward_tango_pkt_arg_10 = tango_metrics_hdr_1;
int<<32>> forward_tango_pkt_arg_11 = tango_metrics_hdr_2;
int<<24>> forward_tango_pkt_arg_12 = tango_metrics_hdr_3;
int<<8>> forward_tango_pkt_arg_13 = tango_metrics_hdr_4;
int<<8>> forward_tango_pkt_arg_14 = forward_flow_ip_header_0;
int<<8>> forward_tango_pkt_arg_15 = forward_flow_ip_header_1;
int<<16>> forward_tango_pkt_arg_16 = forward_flow_ip_header_2;
int<<16>> forward_tango_pkt_arg_17 = forward_flow_ip_header_3;
int<<16>> forward_tango_pkt_arg_18 = forward_flow_ip_header_4;
int<<8>> forward_tango_pkt_arg_19 = forward_flow_ip_header_5;
int<<8>> forward_tango_pkt_arg_20 = forward_flow_ip_header_6;
int<<16>> forward_tango_pkt_arg_21 = forward_flow_ip_header_7;
int<<32>> forward_tango_pkt_arg_22 = forward_flow_ip_header_8;
int<<32>> forward_tango_pkt_arg_23 = forward_flow_ip_header_9;
int<<32>> forward_tango_pkt_arg_24 = forward_flow_five_tuple_0;
int<<32>> forward_tango_pkt_arg_25 = forward_flow_five_tuple_1;
int<<16>> forward_tango_pkt_arg_26 = forward_flow_five_tuple_2;
int<<16>> forward_tango_pkt_arg_27 = forward_flow_five_tuple_3;
int<<8>> forward_tango_pkt_arg_28 = forward_flow_five_tuple_4;
generate_port (1, incoming_tango_traffic(forward_tango_pkt_arg_0,forward_tango_pkt_arg_1,forward_tango_pkt_arg_2,forward_tango_pkt_arg_3,forward_tango_pkt_arg_4,forward_tango_pkt_arg_5,forward_tango_pkt_arg_6,forward_tango_pkt_arg_7,forward_tango_pkt_arg_8,forward_tango_pkt_arg_9,forward_tango_pkt_arg_10,forward_tango_pkt_arg_11,forward_tango_pkt_arg_12,forward_tango_pkt_arg_13,forward_tango_pkt_arg_14,forward_tango_pkt_arg_15,forward_tango_pkt_arg_16,forward_tango_pkt_arg_17,forward_tango_pkt_arg_18,forward_tango_pkt_arg_19,forward_tango_pkt_arg_20,forward_tango_pkt_arg_21,forward_tango_pkt_arg_22,forward_tango_pkt_arg_23,forward_tango_pkt_arg_24,forward_tango_pkt_arg_25,forward_tango_pkt_arg_26,forward_tango_pkt_arg_27,forward_tango_pkt_arg_28));
}
}

handle incoming_tango_traffic(int<<48>> incoming_tango_traffic_tango_eth_header_0,int<<48>> incoming_tango_traffic_tango_eth_header_1,int<<16>> incoming_tango_traffic_tango_eth_header_2,int<<32>> incoming_tango_traffic_tango_ip_header_0,int<<16>> incoming_tango_traffic_tango_ip_header_1,int<<8>> incoming_tango_traffic_tango_ip_header_2,int<<8>> incoming_tango_traffic_tango_ip_header_3,int<<128>> incoming_tango_traffic_tango_ip_header_4,int<<128>> incoming_tango_traffic_tango_ip_header_5,int<<8>> incoming_tango_traffic_tango_metrics_header_0,int<<16>> incoming_tango_traffic_tango_metrics_header_1,int<<32>> incoming_tango_traffic_tango_metrics_header_2,int<<24>> incoming_tango_traffic_tango_metrics_header_3,int<<8>> incoming_tango_traffic_tango_metrics_header_4,int<<8>> incoming_tango_traffic_encaped_ip_header_0,int<<8>> incoming_tango_traffic_encaped_ip_header_1,int<<16>> incoming_tango_traffic_encaped_ip_header_2,int<<16>> incoming_tango_traffic_encaped_ip_header_3,int<<16>> incoming_tango_traffic_encaped_ip_header_4,int<<8>> incoming_tango_traffic_encaped_ip_header_5,int<<8>> incoming_tango_traffic_encaped_ip_header_6,int<<16>> incoming_tango_traffic_encaped_ip_header_7,int<<32>> incoming_tango_traffic_encaped_ip_header_8,int<<32>> incoming_tango_traffic_encaped_ip_header_9,int<<32>> incoming_tango_traffic_encaped_five_tuple_0,int<<32>> incoming_tango_traffic_encaped_five_tuple_1,int<<16>> incoming_tango_traffic_encaped_five_tuple_2,int<<16>> incoming_tango_traffic_encaped_five_tuple_3,int<<8>> incoming_tango_traffic_encaped_five_tuple_4) {
int<<4>> map_flow_to_traffic_class_ret = 0;
match (incoming_tango_traffic_encaped_five_tuple_0,incoming_tango_traffic_encaped_five_tuple_2,incoming_tango_traffic_encaped_five_tuple_1,incoming_tango_traffic_encaped_five_tuple_3,incoming_tango_traffic_encaped_five_tuple_4) with 
| _,_,_,_,_ -> {
map_flow_to_traffic_class_ret = 15;
}
int<<4>> traffic_class = map_flow_to_traffic_class_ret;
if (traffic_class==15) {
int<<48>> tunneled_arg_0 = incoming_tango_traffic_tango_eth_header_0;
int<<48>> tunneled_arg_1 = incoming_tango_traffic_tango_eth_header_1;
int<<16>> tunneled_arg_2 = incoming_tango_traffic_tango_eth_header_2;
int<<8>> tunneled_arg_3 = incoming_tango_traffic_encaped_ip_header_0;
int<<8>> tunneled_arg_4 = incoming_tango_traffic_encaped_ip_header_1;
int<<16>> tunneled_arg_5 = incoming_tango_traffic_encaped_ip_header_2;
int<<16>> tunneled_arg_6 = incoming_tango_traffic_encaped_ip_header_3;
int<<16>> tunneled_arg_7 = incoming_tango_traffic_encaped_ip_header_4;
int<<8>> tunneled_arg_8 = incoming_tango_traffic_encaped_ip_header_5;
int<<8>> tunneled_arg_9 = incoming_tango_traffic_encaped_ip_header_6;
int<<16>> tunneled_arg_10 = incoming_tango_traffic_encaped_ip_header_7;
int<<32>> tunneled_arg_11 = incoming_tango_traffic_encaped_ip_header_8;
int<<32>> tunneled_arg_12 = incoming_tango_traffic_encaped_ip_header_9;
generate_port (2, complete_forward(tunneled_arg_0,tunneled_arg_1,tunneled_arg_2,tunneled_arg_3,tunneled_arg_4,tunneled_arg_5,tunneled_arg_6,tunneled_arg_7,tunneled_arg_8,tunneled_arg_9,tunneled_arg_10,tunneled_arg_11,tunneled_arg_12));
} else {
int<<3>> path_id = [2 : 0]incoming_tango_traffic_tango_metrics_header_0;
int<<1>> signature = [0 : 0]incoming_tango_traffic_tango_metrics_header_4;
int<<1>> BookSignatureManager_verify_ret = 0;
match path_id with 
| 0 -> {
BookSignatureManager_verify_ret = 0;
int<<32>> if_precomp = (int<<32>>)Array.get(incoming_book_signature_manager_0,incoming_tango_traffic_tango_metrics_header_3)-(int<<32>>)signature;
if (if_precomp==0) {
BookSignatureManager_verify_ret = 1;
} 
}
| 1 -> {
BookSignatureManager_verify_ret = 0;
int<<32>> if_precomp = (int<<32>>)Array.get(incoming_book_signature_manager_1,incoming_tango_traffic_tango_metrics_header_3)-(int<<32>>)signature;
if (if_precomp==0) {
BookSignatureManager_verify_ret = 1;
} 
}
| 2 -> {
BookSignatureManager_verify_ret = 0;
int<<32>> if_precomp = (int<<32>>)Array.get(incoming_book_signature_manager_2,incoming_tango_traffic_tango_metrics_header_3)-(int<<32>>)signature;
if (if_precomp==0) {
BookSignatureManager_verify_ret = 1;
} 
}
| 3 -> {
BookSignatureManager_verify_ret = 0;
int<<32>> if_precomp = (int<<32>>)Array.get(incoming_book_signature_manager_3,incoming_tango_traffic_tango_metrics_header_3)-(int<<32>>)signature;
if (if_precomp==0) {
BookSignatureManager_verify_ret = 1;
} 
}
| 4 -> {
BookSignatureManager_verify_ret = 0;
int<<32>> if_precomp = (int<<32>>)Array.get(incoming_book_signature_manager_4,incoming_tango_traffic_tango_metrics_header_3)-(int<<32>>)signature;
if (if_precomp==0) {
BookSignatureManager_verify_ret = 1;
} 
}
| 5 -> {
BookSignatureManager_verify_ret = 0;
int<<32>> if_precomp = (int<<32>>)Array.get(incoming_book_signature_manager_5,incoming_tango_traffic_tango_metrics_header_3)-(int<<32>>)signature;
if (if_precomp==0) {
BookSignatureManager_verify_ret = 1;
} 
}
| 6 -> {
BookSignatureManager_verify_ret = 0;
int<<32>> if_precomp = (int<<32>>)Array.get(incoming_book_signature_manager_6,incoming_tango_traffic_tango_metrics_header_3)-(int<<32>>)signature;
if (if_precomp==0) {
BookSignatureManager_verify_ret = 1;
} 
}
| 7 -> {
BookSignatureManager_verify_ret = 0;
int<<32>> if_precomp = (int<<32>>)Array.get(incoming_book_signature_manager_7,incoming_tango_traffic_tango_metrics_header_3)-(int<<32>>)signature;
if (if_precomp==0) {
BookSignatureManager_verify_ret = 1;
} 
}
| _ -> {

}
int<<1>> is_valid_seq_num = BookSignatureManager_verify_ret;
int<<12>> timestamp = [11 : 0]incoming_tango_traffic_tango_metrics_header_1;
int<<3>> path_id = [2 : 0]incoming_tango_traffic_tango_metrics_header_0;
int<<1>> MetricSignatureManager_verify_ret = 0;
match path_id with 
| 0 -> {
MetricSignatureManager_verify_ret = 0;
int<<32>> if_precomp = Array.get(incoming_metric_signature_manager_0,[3 : 0]timestamp)-incoming_tango_traffic_tango_metrics_header_2;
if (if_precomp==0) {
MetricSignatureManager_verify_ret = 1;
} 
}
| 1 -> {
MetricSignatureManager_verify_ret = 0;
int<<32>> if_precomp = Array.get(incoming_metric_signature_manager_1,[3 : 0]timestamp)-incoming_tango_traffic_tango_metrics_header_2;
if (if_precomp==0) {
MetricSignatureManager_verify_ret = 1;
} 
}
| 2 -> {
MetricSignatureManager_verify_ret = 0;
int<<32>> if_precomp = Array.get(incoming_metric_signature_manager_2,[3 : 0]timestamp)-incoming_tango_traffic_tango_metrics_header_2;
if (if_precomp==0) {
MetricSignatureManager_verify_ret = 1;
} 
}
| 3 -> {
MetricSignatureManager_verify_ret = 0;
int<<32>> if_precomp = Array.get(incoming_metric_signature_manager_3,[3 : 0]timestamp)-incoming_tango_traffic_tango_metrics_header_2;
if (if_precomp==0) {
MetricSignatureManager_verify_ret = 1;
} 
}
| 4 -> {
MetricSignatureManager_verify_ret = 0;
int<<32>> if_precomp = Array.get(incoming_metric_signature_manager_4,[3 : 0]timestamp)-incoming_tango_traffic_tango_metrics_header_2;
if (if_precomp==0) {
MetricSignatureManager_verify_ret = 1;
} 
}
| 5 -> {
MetricSignatureManager_verify_ret = 0;
int<<32>> if_precomp = Array.get(incoming_metric_signature_manager_5,[3 : 0]timestamp)-incoming_tango_traffic_tango_metrics_header_2;
if (if_precomp==0) {
MetricSignatureManager_verify_ret = 1;
} 
}
| 6 -> {
MetricSignatureManager_verify_ret = 0;
int<<32>> if_precomp = Array.get(incoming_metric_signature_manager_6,[3 : 0]timestamp)-incoming_tango_traffic_tango_metrics_header_2;
if (if_precomp==0) {
MetricSignatureManager_verify_ret = 1;
} 
}
| 7 -> {
MetricSignatureManager_verify_ret = 0;
int<<32>> if_precomp = Array.get(incoming_metric_signature_manager_7,[3 : 0]timestamp)-incoming_tango_traffic_tango_metrics_header_2;
if (if_precomp==0) {
MetricSignatureManager_verify_ret = 1;
} 
}
| _ -> {

}
int<<1>> is_valid_metrics = MetricSignatureManager_verify_ret;
if (!is_valid_seq_num==1&&is_valid_metrics==1) {
int<<3>> path_id = [2 : 0]incoming_tango_traffic_tango_metrics_header_0;
Array.setm(invalid_pkt_manager_0,path_id,InvalidPacketManager_increment,1);
} else {
int<<3>> path_id = [2 : 0]incoming_tango_traffic_tango_metrics_header_0;
int<<6>> MetricAverageTracker_increment_ret = 32;
MetricAverageTracker_increment_ret = Array.update(metric_avg_tracker_0,path_id,MetricAverageTracker_get_curr,0,MetricAverageTracker_next,0);
int<<32>> avg_count = (int<<32>>)MetricAverageTracker_increment_ret;
int<<3>> path_id = [2 : 0]incoming_tango_traffic_tango_metrics_header_0;
int<<32>> LossMetricsManager_update_loss_ret = 32;
int<<32>> loss_found = (int<<32>>)Array.update(loss_metrics_manager_0,path_id,LossMetricsManager_calc_loss,incoming_tango_traffic_tango_metrics_header_3,LossMetricsManager_store_larger,incoming_tango_traffic_tango_metrics_header_3);
int<<32>> curr_loss_sum = 0;
int<<32>> if_precomp = avg_count|-|62;
if (if_precomp!=0) {
curr_loss_sum = Array.update(loss_metrics_manager_1,path_id,LossMetricsManager_get_loss_sum,loss_found,LossMetricsManager_reset_loss_sum,0);
} else {
curr_loss_sum = Array.update(loss_metrics_manager_1,path_id,LossMetricsManager_get_loss_sum,loss_found,LossMetricsManager_get_loss_sum,loss_found);
}
int<<32>> avg_loss = 0;
int<<32>> if_precomp = avg_count|-|62;
if (if_precomp!=0) {
avg_loss = curr_loss_sum;
Array.set(loss_metrics_manager_2,path_id,curr_loss_sum);
} else {
avg_loss = Array.get(loss_metrics_manager_2,path_id);
}
LossMetricsManager_update_loss_ret = avg_loss;
int<<32>> loss_metrics = LossMetricsManager_update_loss_ret;
int<<12>> timestamp = [11 : 0]incoming_tango_traffic_tango_metrics_header_1;
int<<3>> path_id = [2 : 0]incoming_tango_traffic_tango_metrics_header_0;
int<<32>> DelayMetricsManager_update_delay_ret = 32;
int<<32>> time_now = Sys.time();
int<<12>> curr_time = [31 : 20]time_now;
int<<32>> new_delay = (int<<32>>)curr_time-timestamp;
int<<32>> delay_sum = 0;
int<<32>> if_precomp = avg_count|-|62;
if (if_precomp!=0) {
delay_sum = Array.update(delay_metrics_manager_0,path_id,DelayMetricsManager_get_delay_sum,new_delay,DelayMetricsManager_reset_delay_sum,0);
} else {
delay_sum = Array.update(delay_metrics_manager_0,path_id,DelayMetricsManager_get_delay_sum,new_delay,DelayMetricsManager_get_delay_sum,new_delay);
}
int<<32>> delay_avg = Array.update_complex(delay_metrics_manager_1,path_id,DelayMetricsManager_update_delay_avg,delay_sum,avg_count,0);
DelayMetricsManager_update_delay_ret = delay_avg;
int<<32>> delay_metrics = DelayMetricsManager_update_delay_ret;
int<<48>> tunneled_arg_0 = incoming_tango_traffic_tango_eth_header_0;
int<<48>> tunneled_arg_1 = incoming_tango_traffic_tango_eth_header_1;
int<<16>> tunneled_arg_2 = incoming_tango_traffic_tango_eth_header_2;
int<<8>> tunneled_arg_3 = incoming_tango_traffic_encaped_ip_header_0;
int<<8>> tunneled_arg_4 = incoming_tango_traffic_encaped_ip_header_1;
int<<16>> tunneled_arg_5 = incoming_tango_traffic_encaped_ip_header_2;
int<<16>> tunneled_arg_6 = incoming_tango_traffic_encaped_ip_header_3;
int<<16>> tunneled_arg_7 = incoming_tango_traffic_encaped_ip_header_4;
int<<8>> tunneled_arg_8 = incoming_tango_traffic_encaped_ip_header_5;
int<<8>> tunneled_arg_9 = incoming_tango_traffic_encaped_ip_header_6;
int<<16>> tunneled_arg_10 = incoming_tango_traffic_encaped_ip_header_7;
int<<32>> tunneled_arg_11 = incoming_tango_traffic_encaped_ip_header_8;
int<<32>> tunneled_arg_12 = incoming_tango_traffic_encaped_ip_header_9;
generate_port (2, complete_forward(tunneled_arg_0,tunneled_arg_1,tunneled_arg_2,tunneled_arg_3,tunneled_arg_4,tunneled_arg_5,tunneled_arg_6,tunneled_arg_7,tunneled_arg_8,tunneled_arg_9,tunneled_arg_10,tunneled_arg_11,tunneled_arg_12));
}
}
}
program after exp tree balancing: 
memop MetricAverageTracker_next(int<<32>> curr,int<<32>> ignore)
 {return curr+1;
}

memop MetricAverageTracker_get_curr(int<<32>> curr,int<<32>> ignore)
 {return curr;
}

memop LossMetricsManager_get_loss_sum(int<<32>> curr_loss_sum,int<<32>> new_loss)
 {return curr_loss_sum+new_loss;
}

memop LossMetricsManager_reset_loss_sum(int<<32>> curr_loss_sum,int<<32>> new_loss)
 {return 0;
}

memop LossMetricsManager_update_loss_avg(int<<32>> curr_loss_avg,int<<32>> loss_sum,int<<32>> avg_counter)
 {{
b1=(should_reset,avg_counter>62);
b2=None
cell1=(should_reset -> loss_sum), None
cell2=None, None

ret=(true -> cell1)
}}

memop LossMetricsManager_store_larger(int<<32>> curr_seq_num,int<<32>> new_seq_num)
 {if curr_seq_num<new_seq_num then new_seq_num else curr_seq_num}

memop LossMetricsManager_calc_loss(int<<32>> curr_seq_num,int<<32>> new_seq_num)
 {if curr_seq_num+1<new_seq_num then new_seq_num-curr_seq_num else 0}

memop DelayMetricsManager_update_delay_avg(int<<32>> curr_delay_avg,int<<32>> delay_sum,int<<32>> curr_count)
 {{
b1=(should_reset,curr_count>62);
b2=None
cell1=(should_reset -> delay_sum), None
cell2=None, None

ret=(true -> cell1)
}}

memop DelayMetricsManager_get_delay_sum(int<<32>> curr_delay_sum,int<<32>> new_delay)
 {return curr_delay_sum+new_delay;
}

memop DelayMetricsManager_reset_delay_sum(int<<32>> curr_delay_sum,int<<32>> new_delay)
 {return 0;
}

memop SequenceNumberManager_next(int<<32>> curr,int<<32>> ignore)
 {return curr+1;
}

memop InvalidPacketManager_increment(int<<32>> curr,int<<32>> inc_by)
 {return curr+inc_by;
}

global Array.t<<3>> route_manager_0 = Array.create(16);


global Array.t<<24>> sequence_counters_0 = Array.create(8);


global Array.t<<1>> incoming_book_signature_manager_0 = Array.create(65536);


global Array.t<<1>> incoming_book_signature_manager_1 = Array.create(65536);


global Array.t<<1>> incoming_book_signature_manager_2 = Array.create(65536);


global Array.t<<1>> incoming_book_signature_manager_3 = Array.create(65536);


global Array.t<<1>> incoming_book_signature_manager_4 = Array.create(65536);


global Array.t<<1>> incoming_book_signature_manager_5 = Array.create(65536);


global Array.t<<1>> incoming_book_signature_manager_6 = Array.create(65536);


global Array.t<<1>> incoming_book_signature_manager_7 = Array.create(65536);


global Array.t<<32>> incoming_metric_signature_manager_0 = Array.create(16);


global Array.t<<32>> incoming_metric_signature_manager_1 = Array.create(16);


global Array.t<<32>> incoming_metric_signature_manager_2 = Array.create(16);


global Array.t<<32>> incoming_metric_signature_manager_3 = Array.create(16);


global Array.t<<32>> incoming_metric_signature_manager_4 = Array.create(16);


global Array.t<<32>> incoming_metric_signature_manager_5 = Array.create(16);


global Array.t<<32>> incoming_metric_signature_manager_6 = Array.create(16);


global Array.t<<32>> incoming_metric_signature_manager_7 = Array.create(16);


global Array.t<<1>> outgoing_book_signature_manager_0 = Array.create(65536);


global Array.t<<1>> outgoing_book_signature_manager_1 = Array.create(65536);


global Array.t<<1>> outgoing_book_signature_manager_2 = Array.create(65536);


global Array.t<<1>> outgoing_book_signature_manager_3 = Array.create(65536);


global Array.t<<1>> outgoing_book_signature_manager_4 = Array.create(65536);


global Array.t<<1>> outgoing_book_signature_manager_5 = Array.create(65536);


global Array.t<<1>> outgoing_book_signature_manager_6 = Array.create(65536);


global Array.t<<1>> outgoing_book_signature_manager_7 = Array.create(65536);


global Array.t<<32>> outgoing_metric_signature_manager_0 = Array.create(16);


global Array.t<<32>> outgoing_metric_signature_manager_1 = Array.create(16);


global Array.t<<32>> outgoing_metric_signature_manager_2 = Array.create(16);


global Array.t<<32>> outgoing_metric_signature_manager_3 = Array.create(16);


global Array.t<<32>> outgoing_metric_signature_manager_4 = Array.create(16);


global Array.t<<32>> outgoing_metric_signature_manager_5 = Array.create(16);


global Array.t<<32>> outgoing_metric_signature_manager_6 = Array.create(16);


global Array.t<<32>> outgoing_metric_signature_manager_7 = Array.create(16);


global Array.t<<6>> metric_avg_tracker_0 = Array.create(8);


global Array.t<<24>> loss_metrics_manager_0 = Array.create(8);


global Array.t<<32>> loss_metrics_manager_1 = Array.create(8);


global Array.t<<32>> loss_metrics_manager_2 = Array.create(8);


global Array.t<<32>> delay_metrics_manager_0 = Array.create(8);


global Array.t<<32>> delay_metrics_manager_1 = Array.create(8);


global Array.t<<32>> invalid_pkt_manager_0 = Array.create(8);


entry event forward_flow(int<<48>> forward_flow_eth_header_0,int<<48>> forward_flow_eth_header_1,int<<16>> forward_flow_eth_header_2,int<<8>> forward_flow_ip_header_0,int<<8>> forward_flow_ip_header_1,int<<16>> forward_flow_ip_header_2,int<<16>> forward_flow_ip_header_3,int<<16>> forward_flow_ip_header_4,int<<8>> forward_flow_ip_header_5,int<<8>> forward_flow_ip_header_6,int<<16>> forward_flow_ip_header_7,int<<32>> forward_flow_ip_header_8,int<<32>> forward_flow_ip_header_9,int<<32>> forward_flow_five_tuple_0,int<<32>> forward_flow_five_tuple_1,int<<16>> forward_flow_five_tuple_2,int<<16>> forward_flow_five_tuple_3,int<<8>> forward_flow_five_tuple_4);

event complete_forward(int<<48>> complete_forward_eth_header_0,int<<48>> complete_forward_eth_header_1,int<<16>> complete_forward_eth_header_2,int<<8>> complete_forward_ip_header_0,int<<8>> complete_forward_ip_header_1,int<<16>> complete_forward_ip_header_2,int<<16>> complete_forward_ip_header_3,int<<16>> complete_forward_ip_header_4,int<<8>> complete_forward_ip_header_5,int<<8>> complete_forward_ip_header_6,int<<16>> complete_forward_ip_header_7,int<<32>> complete_forward_ip_header_8,int<<32>> complete_forward_ip_header_9);

handle complete_forward(int<<48>> complete_forward_eth_header_0,int<<48>> complete_forward_eth_header_1,int<<16>> complete_forward_eth_header_2,int<<8>> complete_forward_ip_header_0,int<<8>> complete_forward_ip_header_1,int<<16>> complete_forward_ip_header_2,int<<16>> complete_forward_ip_header_3,int<<16>> complete_forward_ip_header_4,int<<8>> complete_forward_ip_header_5,int<<8>> complete_forward_ip_header_6,int<<16>> complete_forward_ip_header_7,int<<32>> complete_forward_ip_header_8,int<<32>> complete_forward_ip_header_9) {

}

event incoming_tango_traffic(int<<48>> incoming_tango_traffic_tango_eth_header_0,int<<48>> incoming_tango_traffic_tango_eth_header_1,int<<16>> incoming_tango_traffic_tango_eth_header_2,int<<32>> incoming_tango_traffic_tango_ip_header_0,int<<16>> incoming_tango_traffic_tango_ip_header_1,int<<8>> incoming_tango_traffic_tango_ip_header_2,int<<8>> incoming_tango_traffic_tango_ip_header_3,int<<128>> incoming_tango_traffic_tango_ip_header_4,int<<128>> incoming_tango_traffic_tango_ip_header_5,int<<8>> incoming_tango_traffic_tango_metrics_header_0,int<<16>> incoming_tango_traffic_tango_metrics_header_1,int<<32>> incoming_tango_traffic_tango_metrics_header_2,int<<24>> incoming_tango_traffic_tango_metrics_header_3,int<<8>> incoming_tango_traffic_tango_metrics_header_4,int<<8>> incoming_tango_traffic_encaped_ip_header_0,int<<8>> incoming_tango_traffic_encaped_ip_header_1,int<<16>> incoming_tango_traffic_encaped_ip_header_2,int<<16>> incoming_tango_traffic_encaped_ip_header_3,int<<16>> incoming_tango_traffic_encaped_ip_header_4,int<<8>> incoming_tango_traffic_encaped_ip_header_5,int<<8>> incoming_tango_traffic_encaped_ip_header_6,int<<16>> incoming_tango_traffic_encaped_ip_header_7,int<<32>> incoming_tango_traffic_encaped_ip_header_8,int<<32>> incoming_tango_traffic_encaped_ip_header_9,int<<32>> incoming_tango_traffic_encaped_five_tuple_0,int<<32>> incoming_tango_traffic_encaped_five_tuple_1,int<<16>> incoming_tango_traffic_encaped_five_tuple_2,int<<16>> incoming_tango_traffic_encaped_five_tuple_3,int<<8>> incoming_tango_traffic_encaped_five_tuple_4);

handle forward_flow(int<<48>> forward_flow_eth_header_0,int<<48>> forward_flow_eth_header_1,int<<16>> forward_flow_eth_header_2,int<<8>> forward_flow_ip_header_0,int<<8>> forward_flow_ip_header_1,int<<16>> forward_flow_ip_header_2,int<<16>> forward_flow_ip_header_3,int<<16>> forward_flow_ip_header_4,int<<8>> forward_flow_ip_header_5,int<<8>> forward_flow_ip_header_6,int<<16>> forward_flow_ip_header_7,int<<32>> forward_flow_ip_header_8,int<<32>> forward_flow_ip_header_9,int<<32>> forward_flow_five_tuple_0,int<<32>> forward_flow_five_tuple_1,int<<16>> forward_flow_five_tuple_2,int<<16>> forward_flow_five_tuple_3,int<<8>> forward_flow_five_tuple_4) {
int<<4>> map_flow_to_traffic_class_ret = 0;
match (forward_flow_five_tuple_0,forward_flow_five_tuple_2,forward_flow_five_tuple_1,forward_flow_five_tuple_3,forward_flow_five_tuple_4) with 
| _,_,_,_,_ -> {
map_flow_to_traffic_class_ret = 15;
}
int<<4>> traffic_class = map_flow_to_traffic_class_ret;
if (traffic_class==15) {
int<<48>> tunneled_arg_0 = forward_flow_eth_header_0;
int<<48>> tunneled_arg_1 = forward_flow_eth_header_1;
int<<16>> tunneled_arg_2 = forward_flow_eth_header_2;
int<<8>> tunneled_arg_3 = forward_flow_ip_header_0;
int<<8>> tunneled_arg_4 = forward_flow_ip_header_1;
int<<16>> tunneled_arg_5 = forward_flow_ip_header_2;
int<<16>> tunneled_arg_6 = forward_flow_ip_header_3;
int<<16>> tunneled_arg_7 = forward_flow_ip_header_4;
int<<8>> tunneled_arg_8 = forward_flow_ip_header_5;
int<<8>> tunneled_arg_9 = forward_flow_ip_header_6;
int<<16>> tunneled_arg_10 = forward_flow_ip_header_7;
int<<32>> tunneled_arg_11 = forward_flow_ip_header_8;
int<<32>> tunneled_arg_12 = forward_flow_ip_header_9;
generate_port (2, complete_forward(tunneled_arg_0,tunneled_arg_1,tunneled_arg_2,tunneled_arg_3,tunneled_arg_4,tunneled_arg_5,tunneled_arg_6,tunneled_arg_7,tunneled_arg_8,tunneled_arg_9,tunneled_arg_10,tunneled_arg_11,tunneled_arg_12));
} else {
int<<3>> RouteManager_get_path_id_ret = 0;
RouteManager_get_path_id_ret = Array.get(route_manager_0,traffic_class);
int<<3>> path_id = RouteManager_get_path_id_ret;
int<<32>> map_path_to_tunnel_header_ret_0 = 32;
int<<16>> map_path_to_tunnel_header_ret_1 = 32;
int<<8>> map_path_to_tunnel_header_ret_2 = 32;
int<<8>> map_path_to_tunnel_header_ret_3 = 32;
int<<128>> map_path_to_tunnel_header_ret_4 = 32;
int<<128>> map_path_to_tunnel_header_ret_5 = 32;
match path_id with 
| _ -> {
map_path_to_tunnel_header_ret_0 = 0;
map_path_to_tunnel_header_ret_1 = 0;
map_path_to_tunnel_header_ret_2 = 0;
map_path_to_tunnel_header_ret_3 = 0;
map_path_to_tunnel_header_ret_4 = 0;
map_path_to_tunnel_header_ret_5 = 0;
}
int<<32>> tango_tunnel_hdr_0 = map_path_to_tunnel_header_ret_0;
int<<16>> tango_tunnel_hdr_1 = map_path_to_tunnel_header_ret_1;
int<<8>> tango_tunnel_hdr_2 = map_path_to_tunnel_header_ret_2;
int<<8>> tango_tunnel_hdr_3 = map_path_to_tunnel_header_ret_3;
int<<128>> tango_tunnel_hdr_4 = map_path_to_tunnel_header_ret_4;
int<<128>> tango_tunnel_hdr_5 = map_path_to_tunnel_header_ret_5;
int<<24>> SequenceNumberManager_increment_ret = 32;
SequenceNumberManager_increment_ret = Array.update(sequence_counters_0,path_id,SequenceNumberManager_next,0,SequenceNumberManager_next,0);
int<<24>> seq_number = SequenceNumberManager_increment_ret;
int<<1>> BookSignatureManager_sign_ret = 0;
match path_id with 
| 0 -> {
BookSignatureManager_sign_ret = Array.get(outgoing_book_signature_manager_0,seq_number);
}
| 1 -> {
BookSignatureManager_sign_ret = Array.get(outgoing_book_signature_manager_1,seq_number);
}
| 2 -> {
BookSignatureManager_sign_ret = Array.get(outgoing_book_signature_manager_2,seq_number);
}
| 3 -> {
BookSignatureManager_sign_ret = Array.get(outgoing_book_signature_manager_3,seq_number);
}
| 4 -> {
BookSignatureManager_sign_ret = Array.get(outgoing_book_signature_manager_4,seq_number);
}
| 5 -> {
BookSignatureManager_sign_ret = Array.get(outgoing_book_signature_manager_5,seq_number);
}
| 6 -> {
BookSignatureManager_sign_ret = Array.get(outgoing_book_signature_manager_6,seq_number);
}
| 7 -> {
BookSignatureManager_sign_ret = Array.get(outgoing_book_signature_manager_7,seq_number);
}
| _ -> {

}
int<<1>> book_signature = BookSignatureManager_sign_ret;
int<<32>> time_now = Sys.time();
int<<12>> timestamp = [31 : 20]time_now;
int<<32>> MetricSignatureManager_sign_ret = 32;
match path_id with 
| 0 -> {
MetricSignatureManager_sign_ret = Array.get(outgoing_metric_signature_manager_0,[3 : 0]timestamp);
}
| 1 -> {
MetricSignatureManager_sign_ret = Array.get(outgoing_metric_signature_manager_1,[3 : 0]timestamp);
}
| 2 -> {
MetricSignatureManager_sign_ret = Array.get(outgoing_metric_signature_manager_2,[3 : 0]timestamp);
}
| 3 -> {
MetricSignatureManager_sign_ret = Array.get(outgoing_metric_signature_manager_3,[3 : 0]timestamp);
}
| 4 -> {
MetricSignatureManager_sign_ret = Array.get(outgoing_metric_signature_manager_4,[3 : 0]timestamp);
}
| 5 -> {
MetricSignatureManager_sign_ret = Array.get(outgoing_metric_signature_manager_5,[3 : 0]timestamp);
}
| 6 -> {
MetricSignatureManager_sign_ret = Array.get(outgoing_metric_signature_manager_6,[3 : 0]timestamp);
}
| 7 -> {
MetricSignatureManager_sign_ret = Array.get(outgoing_metric_signature_manager_7,[3 : 0]timestamp);
}
| _ -> {

}
int<<32>> ts_signature = MetricSignatureManager_sign_ret;
int<<8>> tango_metrics_hdr_0 = (int<<8>>)path_id;
int<<16>> tango_metrics_hdr_1 = (int<<16>>)timestamp;
int<<32>> tango_metrics_hdr_2 = ts_signature;
int<<24>> tango_metrics_hdr_3 = seq_number;
int<<8>> tango_metrics_hdr_4 = (int<<8>>)book_signature;
int<<16>> payload_len = forward_flow_ip_header_2+(int<<16>>)[7 : 4]forward_flow_ip_header_0^0+176;
int<<48>> forward_tango_pkt_arg_0 = forward_flow_eth_header_0;
int<<48>> forward_tango_pkt_arg_1 = forward_flow_eth_header_1;
int<<16>> forward_tango_pkt_arg_2 = forward_flow_eth_header_2;
int<<32>> forward_tango_pkt_arg_3 = tango_tunnel_hdr_0;
int<<16>> forward_tango_pkt_arg_4 = payload_len;
int<<8>> forward_tango_pkt_arg_5 = tango_tunnel_hdr_2;
int<<8>> forward_tango_pkt_arg_6 = tango_tunnel_hdr_3;
int<<128>> forward_tango_pkt_arg_7 = tango_tunnel_hdr_4;
int<<128>> forward_tango_pkt_arg_8 = tango_tunnel_hdr_5;
int<<8>> forward_tango_pkt_arg_9 = tango_metrics_hdr_0;
int<<16>> forward_tango_pkt_arg_10 = tango_metrics_hdr_1;
int<<32>> forward_tango_pkt_arg_11 = tango_metrics_hdr_2;
int<<24>> forward_tango_pkt_arg_12 = tango_metrics_hdr_3;
int<<8>> forward_tango_pkt_arg_13 = tango_metrics_hdr_4;
int<<8>> forward_tango_pkt_arg_14 = forward_flow_ip_header_0;
int<<8>> forward_tango_pkt_arg_15 = forward_flow_ip_header_1;
int<<16>> forward_tango_pkt_arg_16 = forward_flow_ip_header_2;
int<<16>> forward_tango_pkt_arg_17 = forward_flow_ip_header_3;
int<<16>> forward_tango_pkt_arg_18 = forward_flow_ip_header_4;
int<<8>> forward_tango_pkt_arg_19 = forward_flow_ip_header_5;
int<<8>> forward_tango_pkt_arg_20 = forward_flow_ip_header_6;
int<<16>> forward_tango_pkt_arg_21 = forward_flow_ip_header_7;
int<<32>> forward_tango_pkt_arg_22 = forward_flow_ip_header_8;
int<<32>> forward_tango_pkt_arg_23 = forward_flow_ip_header_9;
int<<32>> forward_tango_pkt_arg_24 = forward_flow_five_tuple_0;
int<<32>> forward_tango_pkt_arg_25 = forward_flow_five_tuple_1;
int<<16>> forward_tango_pkt_arg_26 = forward_flow_five_tuple_2;
int<<16>> forward_tango_pkt_arg_27 = forward_flow_five_tuple_3;
int<<8>> forward_tango_pkt_arg_28 = forward_flow_five_tuple_4;
generate_port (1, incoming_tango_traffic(forward_tango_pkt_arg_0,forward_tango_pkt_arg_1,forward_tango_pkt_arg_2,forward_tango_pkt_arg_3,forward_tango_pkt_arg_4,forward_tango_pkt_arg_5,forward_tango_pkt_arg_6,forward_tango_pkt_arg_7,forward_tango_pkt_arg_8,forward_tango_pkt_arg_9,forward_tango_pkt_arg_10,forward_tango_pkt_arg_11,forward_tango_pkt_arg_12,forward_tango_pkt_arg_13,forward_tango_pkt_arg_14,forward_tango_pkt_arg_15,forward_tango_pkt_arg_16,forward_tango_pkt_arg_17,forward_tango_pkt_arg_18,forward_tango_pkt_arg_19,forward_tango_pkt_arg_20,forward_tango_pkt_arg_21,forward_tango_pkt_arg_22,forward_tango_pkt_arg_23,forward_tango_pkt_arg_24,forward_tango_pkt_arg_25,forward_tango_pkt_arg_26,forward_tango_pkt_arg_27,forward_tango_pkt_arg_28));
}
}

handle incoming_tango_traffic(int<<48>> incoming_tango_traffic_tango_eth_header_0,int<<48>> incoming_tango_traffic_tango_eth_header_1,int<<16>> incoming_tango_traffic_tango_eth_header_2,int<<32>> incoming_tango_traffic_tango_ip_header_0,int<<16>> incoming_tango_traffic_tango_ip_header_1,int<<8>> incoming_tango_traffic_tango_ip_header_2,int<<8>> incoming_tango_traffic_tango_ip_header_3,int<<128>> incoming_tango_traffic_tango_ip_header_4,int<<128>> incoming_tango_traffic_tango_ip_header_5,int<<8>> incoming_tango_traffic_tango_metrics_header_0,int<<16>> incoming_tango_traffic_tango_metrics_header_1,int<<32>> incoming_tango_traffic_tango_metrics_header_2,int<<24>> incoming_tango_traffic_tango_metrics_header_3,int<<8>> incoming_tango_traffic_tango_metrics_header_4,int<<8>> incoming_tango_traffic_encaped_ip_header_0,int<<8>> incoming_tango_traffic_encaped_ip_header_1,int<<16>> incoming_tango_traffic_encaped_ip_header_2,int<<16>> incoming_tango_traffic_encaped_ip_header_3,int<<16>> incoming_tango_traffic_encaped_ip_header_4,int<<8>> incoming_tango_traffic_encaped_ip_header_5,int<<8>> incoming_tango_traffic_encaped_ip_header_6,int<<16>> incoming_tango_traffic_encaped_ip_header_7,int<<32>> incoming_tango_traffic_encaped_ip_header_8,int<<32>> incoming_tango_traffic_encaped_ip_header_9,int<<32>> incoming_tango_traffic_encaped_five_tuple_0,int<<32>> incoming_tango_traffic_encaped_five_tuple_1,int<<16>> incoming_tango_traffic_encaped_five_tuple_2,int<<16>> incoming_tango_traffic_encaped_five_tuple_3,int<<8>> incoming_tango_traffic_encaped_five_tuple_4) {
int<<4>> map_flow_to_traffic_class_ret = 0;
match (incoming_tango_traffic_encaped_five_tuple_0,incoming_tango_traffic_encaped_five_tuple_2,incoming_tango_traffic_encaped_five_tuple_1,incoming_tango_traffic_encaped_five_tuple_3,incoming_tango_traffic_encaped_five_tuple_4) with 
| _,_,_,_,_ -> {
map_flow_to_traffic_class_ret = 15;
}
int<<4>> traffic_class = map_flow_to_traffic_class_ret;
if (traffic_class==15) {
int<<48>> tunneled_arg_0 = incoming_tango_traffic_tango_eth_header_0;
int<<48>> tunneled_arg_1 = incoming_tango_traffic_tango_eth_header_1;
int<<16>> tunneled_arg_2 = incoming_tango_traffic_tango_eth_header_2;
int<<8>> tunneled_arg_3 = incoming_tango_traffic_encaped_ip_header_0;
int<<8>> tunneled_arg_4 = incoming_tango_traffic_encaped_ip_header_1;
int<<16>> tunneled_arg_5 = incoming_tango_traffic_encaped_ip_header_2;
int<<16>> tunneled_arg_6 = incoming_tango_traffic_encaped_ip_header_3;
int<<16>> tunneled_arg_7 = incoming_tango_traffic_encaped_ip_header_4;
int<<8>> tunneled_arg_8 = incoming_tango_traffic_encaped_ip_header_5;
int<<8>> tunneled_arg_9 = incoming_tango_traffic_encaped_ip_header_6;
int<<16>> tunneled_arg_10 = incoming_tango_traffic_encaped_ip_header_7;
int<<32>> tunneled_arg_11 = incoming_tango_traffic_encaped_ip_header_8;
int<<32>> tunneled_arg_12 = incoming_tango_traffic_encaped_ip_header_9;
generate_port (2, complete_forward(tunneled_arg_0,tunneled_arg_1,tunneled_arg_2,tunneled_arg_3,tunneled_arg_4,tunneled_arg_5,tunneled_arg_6,tunneled_arg_7,tunneled_arg_8,tunneled_arg_9,tunneled_arg_10,tunneled_arg_11,tunneled_arg_12));
} else {
int<<3>> path_id = [2 : 0]incoming_tango_traffic_tango_metrics_header_0;
int<<1>> signature = [0 : 0]incoming_tango_traffic_tango_metrics_header_4;
int<<1>> BookSignatureManager_verify_ret = 0;
match path_id with 
| 0 -> {
BookSignatureManager_verify_ret = 0;
int<<32>> if_precomp = (int<<32>>)Array.get(incoming_book_signature_manager_0,incoming_tango_traffic_tango_metrics_header_3)-(int<<32>>)signature;
if (if_precomp==0) {
BookSignatureManager_verify_ret = 1;
} 
}
| 1 -> {
BookSignatureManager_verify_ret = 0;
int<<32>> if_precomp = (int<<32>>)Array.get(incoming_book_signature_manager_1,incoming_tango_traffic_tango_metrics_header_3)-(int<<32>>)signature;
if (if_precomp==0) {
BookSignatureManager_verify_ret = 1;
} 
}
| 2 -> {
BookSignatureManager_verify_ret = 0;
int<<32>> if_precomp = (int<<32>>)Array.get(incoming_book_signature_manager_2,incoming_tango_traffic_tango_metrics_header_3)-(int<<32>>)signature;
if (if_precomp==0) {
BookSignatureManager_verify_ret = 1;
} 
}
| 3 -> {
BookSignatureManager_verify_ret = 0;
int<<32>> if_precomp = (int<<32>>)Array.get(incoming_book_signature_manager_3,incoming_tango_traffic_tango_metrics_header_3)-(int<<32>>)signature;
if (if_precomp==0) {
BookSignatureManager_verify_ret = 1;
} 
}
| 4 -> {
BookSignatureManager_verify_ret = 0;
int<<32>> if_precomp = (int<<32>>)Array.get(incoming_book_signature_manager_4,incoming_tango_traffic_tango_metrics_header_3)-(int<<32>>)signature;
if (if_precomp==0) {
BookSignatureManager_verify_ret = 1;
} 
}
| 5 -> {
BookSignatureManager_verify_ret = 0;
int<<32>> if_precomp = (int<<32>>)Array.get(incoming_book_signature_manager_5,incoming_tango_traffic_tango_metrics_header_3)-(int<<32>>)signature;
if (if_precomp==0) {
BookSignatureManager_verify_ret = 1;
} 
}
| 6 -> {
BookSignatureManager_verify_ret = 0;
int<<32>> if_precomp = (int<<32>>)Array.get(incoming_book_signature_manager_6,incoming_tango_traffic_tango_metrics_header_3)-(int<<32>>)signature;
if (if_precomp==0) {
BookSignatureManager_verify_ret = 1;
} 
}
| 7 -> {
BookSignatureManager_verify_ret = 0;
int<<32>> if_precomp = (int<<32>>)Array.get(incoming_book_signature_manager_7,incoming_tango_traffic_tango_metrics_header_3)-(int<<32>>)signature;
if (if_precomp==0) {
BookSignatureManager_verify_ret = 1;
} 
}
| _ -> {

}
int<<1>> is_valid_seq_num = BookSignatureManager_verify_ret;
int<<12>> timestamp = [11 : 0]incoming_tango_traffic_tango_metrics_header_1;
int<<3>> path_id = [2 : 0]incoming_tango_traffic_tango_metrics_header_0;
int<<1>> MetricSignatureManager_verify_ret = 0;
match path_id with 
| 0 -> {
MetricSignatureManager_verify_ret = 0;
int<<32>> if_precomp = Array.get(incoming_metric_signature_manager_0,[3 : 0]timestamp)-incoming_tango_traffic_tango_metrics_header_2;
if (if_precomp==0) {
MetricSignatureManager_verify_ret = 1;
} 
}
| 1 -> {
MetricSignatureManager_verify_ret = 0;
int<<32>> if_precomp = Array.get(incoming_metric_signature_manager_1,[3 : 0]timestamp)-incoming_tango_traffic_tango_metrics_header_2;
if (if_precomp==0) {
MetricSignatureManager_verify_ret = 1;
} 
}
| 2 -> {
MetricSignatureManager_verify_ret = 0;
int<<32>> if_precomp = Array.get(incoming_metric_signature_manager_2,[3 : 0]timestamp)-incoming_tango_traffic_tango_metrics_header_2;
if (if_precomp==0) {
MetricSignatureManager_verify_ret = 1;
} 
}
| 3 -> {
MetricSignatureManager_verify_ret = 0;
int<<32>> if_precomp = Array.get(incoming_metric_signature_manager_3,[3 : 0]timestamp)-incoming_tango_traffic_tango_metrics_header_2;
if (if_precomp==0) {
MetricSignatureManager_verify_ret = 1;
} 
}
| 4 -> {
MetricSignatureManager_verify_ret = 0;
int<<32>> if_precomp = Array.get(incoming_metric_signature_manager_4,[3 : 0]timestamp)-incoming_tango_traffic_tango_metrics_header_2;
if (if_precomp==0) {
MetricSignatureManager_verify_ret = 1;
} 
}
| 5 -> {
MetricSignatureManager_verify_ret = 0;
int<<32>> if_precomp = Array.get(incoming_metric_signature_manager_5,[3 : 0]timestamp)-incoming_tango_traffic_tango_metrics_header_2;
if (if_precomp==0) {
MetricSignatureManager_verify_ret = 1;
} 
}
| 6 -> {
MetricSignatureManager_verify_ret = 0;
int<<32>> if_precomp = Array.get(incoming_metric_signature_manager_6,[3 : 0]timestamp)-incoming_tango_traffic_tango_metrics_header_2;
if (if_precomp==0) {
MetricSignatureManager_verify_ret = 1;
} 
}
| 7 -> {
MetricSignatureManager_verify_ret = 0;
int<<32>> if_precomp = Array.get(incoming_metric_signature_manager_7,[3 : 0]timestamp)-incoming_tango_traffic_tango_metrics_header_2;
if (if_precomp==0) {
MetricSignatureManager_verify_ret = 1;
} 
}
| _ -> {

}
int<<1>> is_valid_metrics = MetricSignatureManager_verify_ret;
if (!is_valid_seq_num==1&&is_valid_metrics==1) {
int<<3>> path_id = [2 : 0]incoming_tango_traffic_tango_metrics_header_0;
Array.setm(invalid_pkt_manager_0,path_id,InvalidPacketManager_increment,1);
} else {
int<<3>> path_id = [2 : 0]incoming_tango_traffic_tango_metrics_header_0;
int<<6>> MetricAverageTracker_increment_ret = 32;
MetricAverageTracker_increment_ret = Array.update(metric_avg_tracker_0,path_id,MetricAverageTracker_get_curr,0,MetricAverageTracker_next,0);
int<<32>> avg_count = (int<<32>>)MetricAverageTracker_increment_ret;
int<<3>> path_id = [2 : 0]incoming_tango_traffic_tango_metrics_header_0;
int<<32>> LossMetricsManager_update_loss_ret = 32;
int<<32>> loss_found = (int<<32>>)Array.update(loss_metrics_manager_0,path_id,LossMetricsManager_calc_loss,incoming_tango_traffic_tango_metrics_header_3,LossMetricsManager_store_larger,incoming_tango_traffic_tango_metrics_header_3);
int<<32>> curr_loss_sum = 0;
int<<32>> if_precomp = avg_count|-|62;
if (if_precomp!=0) {
curr_loss_sum = Array.update(loss_metrics_manager_1,path_id,LossMetricsManager_get_loss_sum,loss_found,LossMetricsManager_reset_loss_sum,0);
} else {
curr_loss_sum = Array.update(loss_metrics_manager_1,path_id,LossMetricsManager_get_loss_sum,loss_found,LossMetricsManager_get_loss_sum,loss_found);
}
int<<32>> avg_loss = 0;
int<<32>> if_precomp = avg_count|-|62;
if (if_precomp!=0) {
avg_loss = curr_loss_sum;
Array.set(loss_metrics_manager_2,path_id,curr_loss_sum);
} else {
avg_loss = Array.get(loss_metrics_manager_2,path_id);
}
LossMetricsManager_update_loss_ret = avg_loss;
int<<32>> loss_metrics = LossMetricsManager_update_loss_ret;
int<<12>> timestamp = [11 : 0]incoming_tango_traffic_tango_metrics_header_1;
int<<3>> path_id = [2 : 0]incoming_tango_traffic_tango_metrics_header_0;
int<<32>> DelayMetricsManager_update_delay_ret = 32;
int<<32>> time_now = Sys.time();
int<<12>> curr_time = [31 : 20]time_now;
int<<32>> new_delay = (int<<32>>)curr_time-timestamp;
int<<32>> delay_sum = 0;
int<<32>> if_precomp = avg_count|-|62;
if (if_precomp!=0) {
delay_sum = Array.update(delay_metrics_manager_0,path_id,DelayMetricsManager_get_delay_sum,new_delay,DelayMetricsManager_reset_delay_sum,0);
} else {
delay_sum = Array.update(delay_metrics_manager_0,path_id,DelayMetricsManager_get_delay_sum,new_delay,DelayMetricsManager_get_delay_sum,new_delay);
}
int<<32>> delay_avg = Array.update_complex(delay_metrics_manager_1,path_id,DelayMetricsManager_update_delay_avg,delay_sum,avg_count,0);
DelayMetricsManager_update_delay_ret = delay_avg;
int<<32>> delay_metrics = DelayMetricsManager_update_delay_ret;
int<<48>> tunneled_arg_0 = incoming_tango_traffic_tango_eth_header_0;
int<<48>> tunneled_arg_1 = incoming_tango_traffic_tango_eth_header_1;
int<<16>> tunneled_arg_2 = incoming_tango_traffic_tango_eth_header_2;
int<<8>> tunneled_arg_3 = incoming_tango_traffic_encaped_ip_header_0;
int<<8>> tunneled_arg_4 = incoming_tango_traffic_encaped_ip_header_1;
int<<16>> tunneled_arg_5 = incoming_tango_traffic_encaped_ip_header_2;
int<<16>> tunneled_arg_6 = incoming_tango_traffic_encaped_ip_header_3;
int<<16>> tunneled_arg_7 = incoming_tango_traffic_encaped_ip_header_4;
int<<8>> tunneled_arg_8 = incoming_tango_traffic_encaped_ip_header_5;
int<<8>> tunneled_arg_9 = incoming_tango_traffic_encaped_ip_header_6;
int<<16>> tunneled_arg_10 = incoming_tango_traffic_encaped_ip_header_7;
int<<32>> tunneled_arg_11 = incoming_tango_traffic_encaped_ip_header_8;
int<<32>> tunneled_arg_12 = incoming_tango_traffic_encaped_ip_header_9;
generate_port (2, complete_forward(tunneled_arg_0,tunneled_arg_1,tunneled_arg_2,tunneled_arg_3,tunneled_arg_4,tunneled_arg_5,tunneled_arg_6,tunneled_arg_7,tunneled_arg_8,tunneled_arg_9,tunneled_arg_10,tunneled_arg_11,tunneled_arg_12));
}
}
}
program after precomputation pass: 
memop MetricAverageTracker_next(int<<32>> curr,int<<32>> ignore)
 {return curr+1;
}

memop MetricAverageTracker_get_curr(int<<32>> curr,int<<32>> ignore)
 {return curr;
}

memop LossMetricsManager_get_loss_sum(int<<32>> curr_loss_sum,int<<32>> new_loss)
 {return curr_loss_sum+new_loss;
}

memop LossMetricsManager_reset_loss_sum(int<<32>> curr_loss_sum,int<<32>> new_loss)
 {return 0;
}

memop LossMetricsManager_update_loss_avg(int<<32>> curr_loss_avg,int<<32>> loss_sum,int<<32>> avg_counter)
 {{
b1=(should_reset,avg_counter>62);
b2=None
cell1=(should_reset -> loss_sum), None
cell2=None, None

ret=(true -> cell1)
}}

memop LossMetricsManager_store_larger(int<<32>> curr_seq_num,int<<32>> new_seq_num)
 {if curr_seq_num<new_seq_num then new_seq_num else curr_seq_num}

memop LossMetricsManager_calc_loss(int<<32>> curr_seq_num,int<<32>> new_seq_num)
 {if curr_seq_num+1<new_seq_num then new_seq_num-curr_seq_num else 0}

memop DelayMetricsManager_update_delay_avg(int<<32>> curr_delay_avg,int<<32>> delay_sum,int<<32>> curr_count)
 {{
b1=(should_reset,curr_count>62);
b2=None
cell1=(should_reset -> delay_sum), None
cell2=None, None

ret=(true -> cell1)
}}

memop DelayMetricsManager_get_delay_sum(int<<32>> curr_delay_sum,int<<32>> new_delay)
 {return curr_delay_sum+new_delay;
}

memop DelayMetricsManager_reset_delay_sum(int<<32>> curr_delay_sum,int<<32>> new_delay)
 {return 0;
}

memop SequenceNumberManager_next(int<<32>> curr,int<<32>> ignore)
 {return curr+1;
}

memop InvalidPacketManager_increment(int<<32>> curr,int<<32>> inc_by)
 {return curr+inc_by;
}

global Array.t<<3>> route_manager_0 = Array.create(16);


global Array.t<<24>> sequence_counters_0 = Array.create(8);


global Array.t<<1>> incoming_book_signature_manager_0 = Array.create(65536);


global Array.t<<1>> incoming_book_signature_manager_1 = Array.create(65536);


global Array.t<<1>> incoming_book_signature_manager_2 = Array.create(65536);


global Array.t<<1>> incoming_book_signature_manager_3 = Array.create(65536);


global Array.t<<1>> incoming_book_signature_manager_4 = Array.create(65536);


global Array.t<<1>> incoming_book_signature_manager_5 = Array.create(65536);


global Array.t<<1>> incoming_book_signature_manager_6 = Array.create(65536);


global Array.t<<1>> incoming_book_signature_manager_7 = Array.create(65536);


global Array.t<<32>> incoming_metric_signature_manager_0 = Array.create(16);


global Array.t<<32>> incoming_metric_signature_manager_1 = Array.create(16);


global Array.t<<32>> incoming_metric_signature_manager_2 = Array.create(16);


global Array.t<<32>> incoming_metric_signature_manager_3 = Array.create(16);


global Array.t<<32>> incoming_metric_signature_manager_4 = Array.create(16);


global Array.t<<32>> incoming_metric_signature_manager_5 = Array.create(16);


global Array.t<<32>> incoming_metric_signature_manager_6 = Array.create(16);


global Array.t<<32>> incoming_metric_signature_manager_7 = Array.create(16);


global Array.t<<1>> outgoing_book_signature_manager_0 = Array.create(65536);


global Array.t<<1>> outgoing_book_signature_manager_1 = Array.create(65536);


global Array.t<<1>> outgoing_book_signature_manager_2 = Array.create(65536);


global Array.t<<1>> outgoing_book_signature_manager_3 = Array.create(65536);


global Array.t<<1>> outgoing_book_signature_manager_4 = Array.create(65536);


global Array.t<<1>> outgoing_book_signature_manager_5 = Array.create(65536);


global Array.t<<1>> outgoing_book_signature_manager_6 = Array.create(65536);


global Array.t<<1>> outgoing_book_signature_manager_7 = Array.create(65536);


global Array.t<<32>> outgoing_metric_signature_manager_0 = Array.create(16);


global Array.t<<32>> outgoing_metric_signature_manager_1 = Array.create(16);


global Array.t<<32>> outgoing_metric_signature_manager_2 = Array.create(16);


global Array.t<<32>> outgoing_metric_signature_manager_3 = Array.create(16);


global Array.t<<32>> outgoing_metric_signature_manager_4 = Array.create(16);


global Array.t<<32>> outgoing_metric_signature_manager_5 = Array.create(16);


global Array.t<<32>> outgoing_metric_signature_manager_6 = Array.create(16);


global Array.t<<32>> outgoing_metric_signature_manager_7 = Array.create(16);


global Array.t<<6>> metric_avg_tracker_0 = Array.create(8);


global Array.t<<24>> loss_metrics_manager_0 = Array.create(8);


global Array.t<<32>> loss_metrics_manager_1 = Array.create(8);


global Array.t<<32>> loss_metrics_manager_2 = Array.create(8);


global Array.t<<32>> delay_metrics_manager_0 = Array.create(8);


global Array.t<<32>> delay_metrics_manager_1 = Array.create(8);


global Array.t<<32>> invalid_pkt_manager_0 = Array.create(8);


entry event forward_flow(int<<48>> forward_flow_eth_header_0,int<<48>> forward_flow_eth_header_1,int<<16>> forward_flow_eth_header_2,int<<8>> forward_flow_ip_header_0,int<<8>> forward_flow_ip_header_1,int<<16>> forward_flow_ip_header_2,int<<16>> forward_flow_ip_header_3,int<<16>> forward_flow_ip_header_4,int<<8>> forward_flow_ip_header_5,int<<8>> forward_flow_ip_header_6,int<<16>> forward_flow_ip_header_7,int<<32>> forward_flow_ip_header_8,int<<32>> forward_flow_ip_header_9,int<<32>> forward_flow_five_tuple_0,int<<32>> forward_flow_five_tuple_1,int<<16>> forward_flow_five_tuple_2,int<<16>> forward_flow_five_tuple_3,int<<8>> forward_flow_five_tuple_4);

event complete_forward(int<<48>> complete_forward_eth_header_0,int<<48>> complete_forward_eth_header_1,int<<16>> complete_forward_eth_header_2,int<<8>> complete_forward_ip_header_0,int<<8>> complete_forward_ip_header_1,int<<16>> complete_forward_ip_header_2,int<<16>> complete_forward_ip_header_3,int<<16>> complete_forward_ip_header_4,int<<8>> complete_forward_ip_header_5,int<<8>> complete_forward_ip_header_6,int<<16>> complete_forward_ip_header_7,int<<32>> complete_forward_ip_header_8,int<<32>> complete_forward_ip_header_9);

handle complete_forward(int<<48>> complete_forward_eth_header_0,int<<48>> complete_forward_eth_header_1,int<<16>> complete_forward_eth_header_2,int<<8>> complete_forward_ip_header_0,int<<8>> complete_forward_ip_header_1,int<<16>> complete_forward_ip_header_2,int<<16>> complete_forward_ip_header_3,int<<16>> complete_forward_ip_header_4,int<<8>> complete_forward_ip_header_5,int<<8>> complete_forward_ip_header_6,int<<16>> complete_forward_ip_header_7,int<<32>> complete_forward_ip_header_8,int<<32>> complete_forward_ip_header_9) {

}

event incoming_tango_traffic(int<<48>> incoming_tango_traffic_tango_eth_header_0,int<<48>> incoming_tango_traffic_tango_eth_header_1,int<<16>> incoming_tango_traffic_tango_eth_header_2,int<<32>> incoming_tango_traffic_tango_ip_header_0,int<<16>> incoming_tango_traffic_tango_ip_header_1,int<<8>> incoming_tango_traffic_tango_ip_header_2,int<<8>> incoming_tango_traffic_tango_ip_header_3,int<<128>> incoming_tango_traffic_tango_ip_header_4,int<<128>> incoming_tango_traffic_tango_ip_header_5,int<<8>> incoming_tango_traffic_tango_metrics_header_0,int<<16>> incoming_tango_traffic_tango_metrics_header_1,int<<32>> incoming_tango_traffic_tango_metrics_header_2,int<<24>> incoming_tango_traffic_tango_metrics_header_3,int<<8>> incoming_tango_traffic_tango_metrics_header_4,int<<8>> incoming_tango_traffic_encaped_ip_header_0,int<<8>> incoming_tango_traffic_encaped_ip_header_1,int<<16>> incoming_tango_traffic_encaped_ip_header_2,int<<16>> incoming_tango_traffic_encaped_ip_header_3,int<<16>> incoming_tango_traffic_encaped_ip_header_4,int<<8>> incoming_tango_traffic_encaped_ip_header_5,int<<8>> incoming_tango_traffic_encaped_ip_header_6,int<<16>> incoming_tango_traffic_encaped_ip_header_7,int<<32>> incoming_tango_traffic_encaped_ip_header_8,int<<32>> incoming_tango_traffic_encaped_ip_header_9,int<<32>> incoming_tango_traffic_encaped_five_tuple_0,int<<32>> incoming_tango_traffic_encaped_five_tuple_1,int<<16>> incoming_tango_traffic_encaped_five_tuple_2,int<<16>> incoming_tango_traffic_encaped_five_tuple_3,int<<8>> incoming_tango_traffic_encaped_five_tuple_4);

handle forward_flow(int<<48>> forward_flow_eth_header_0,int<<48>> forward_flow_eth_header_1,int<<16>> forward_flow_eth_header_2,int<<8>> forward_flow_ip_header_0,int<<8>> forward_flow_ip_header_1,int<<16>> forward_flow_ip_header_2,int<<16>> forward_flow_ip_header_3,int<<16>> forward_flow_ip_header_4,int<<8>> forward_flow_ip_header_5,int<<8>> forward_flow_ip_header_6,int<<16>> forward_flow_ip_header_7,int<<32>> forward_flow_ip_header_8,int<<32>> forward_flow_ip_header_9,int<<32>> forward_flow_five_tuple_0,int<<32>> forward_flow_five_tuple_1,int<<16>> forward_flow_five_tuple_2,int<<16>> forward_flow_five_tuple_3,int<<8>> forward_flow_five_tuple_4) {
int<<4>> map_flow_to_traffic_class_ret = 0;
match (forward_flow_five_tuple_0,forward_flow_five_tuple_2,forward_flow_five_tuple_1,forward_flow_five_tuple_3,forward_flow_five_tuple_4) with 
| _,_,_,_,_ -> {
map_flow_to_traffic_class_ret = 15;
}
int<<4>> traffic_class = map_flow_to_traffic_class_ret;
if (traffic_class==15) {
int<<48>> tunneled_arg_0 = forward_flow_eth_header_0;
int<<48>> tunneled_arg_1 = forward_flow_eth_header_1;
int<<16>> tunneled_arg_2 = forward_flow_eth_header_2;
int<<8>> tunneled_arg_3 = forward_flow_ip_header_0;
int<<8>> tunneled_arg_4 = forward_flow_ip_header_1;
int<<16>> tunneled_arg_5 = forward_flow_ip_header_2;
int<<16>> tunneled_arg_6 = forward_flow_ip_header_3;
int<<16>> tunneled_arg_7 = forward_flow_ip_header_4;
int<<8>> tunneled_arg_8 = forward_flow_ip_header_5;
int<<8>> tunneled_arg_9 = forward_flow_ip_header_6;
int<<16>> tunneled_arg_10 = forward_flow_ip_header_7;
int<<32>> tunneled_arg_11 = forward_flow_ip_header_8;
int<<32>> tunneled_arg_12 = forward_flow_ip_header_9;
generate_port (2, complete_forward(tunneled_arg_0,tunneled_arg_1,tunneled_arg_2,tunneled_arg_3,tunneled_arg_4,tunneled_arg_5,tunneled_arg_6,tunneled_arg_7,tunneled_arg_8,tunneled_arg_9,tunneled_arg_10,tunneled_arg_11,tunneled_arg_12));
} else {
int<<3>> RouteManager_get_path_id_ret = 0;
RouteManager_get_path_id_ret = Array.get(route_manager_0,traffic_class);
int<<3>> path_id = RouteManager_get_path_id_ret;
int<<32>> map_path_to_tunnel_header_ret_0 = 32;
int<<16>> map_path_to_tunnel_header_ret_1 = 32;
int<<8>> map_path_to_tunnel_header_ret_2 = 32;
int<<8>> map_path_to_tunnel_header_ret_3 = 32;
int<<128>> map_path_to_tunnel_header_ret_4 = 32;
int<<128>> map_path_to_tunnel_header_ret_5 = 32;
match path_id with 
| _ -> {
map_path_to_tunnel_header_ret_0 = 0;
map_path_to_tunnel_header_ret_1 = 0;
map_path_to_tunnel_header_ret_2 = 0;
map_path_to_tunnel_header_ret_3 = 0;
map_path_to_tunnel_header_ret_4 = 0;
map_path_to_tunnel_header_ret_5 = 0;
}
int<<32>> tango_tunnel_hdr_0 = map_path_to_tunnel_header_ret_0;
int<<16>> tango_tunnel_hdr_1 = map_path_to_tunnel_header_ret_1;
int<<8>> tango_tunnel_hdr_2 = map_path_to_tunnel_header_ret_2;
int<<8>> tango_tunnel_hdr_3 = map_path_to_tunnel_header_ret_3;
int<<128>> tango_tunnel_hdr_4 = map_path_to_tunnel_header_ret_4;
int<<128>> tango_tunnel_hdr_5 = map_path_to_tunnel_header_ret_5;
int<<24>> SequenceNumberManager_increment_ret = 32;
SequenceNumberManager_increment_ret = Array.update(sequence_counters_0,path_id,SequenceNumberManager_next,0,SequenceNumberManager_next,0);
int<<24>> seq_number = SequenceNumberManager_increment_ret;
int<<1>> BookSignatureManager_sign_ret = 0;
match path_id with 
| 0 -> {
BookSignatureManager_sign_ret = Array.get(outgoing_book_signature_manager_0,seq_number);
}
| 1 -> {
BookSignatureManager_sign_ret = Array.get(outgoing_book_signature_manager_1,seq_number);
}
| 2 -> {
BookSignatureManager_sign_ret = Array.get(outgoing_book_signature_manager_2,seq_number);
}
| 3 -> {
BookSignatureManager_sign_ret = Array.get(outgoing_book_signature_manager_3,seq_number);
}
| 4 -> {
BookSignatureManager_sign_ret = Array.get(outgoing_book_signature_manager_4,seq_number);
}
| 5 -> {
BookSignatureManager_sign_ret = Array.get(outgoing_book_signature_manager_5,seq_number);
}
| 6 -> {
BookSignatureManager_sign_ret = Array.get(outgoing_book_signature_manager_6,seq_number);
}
| 7 -> {
BookSignatureManager_sign_ret = Array.get(outgoing_book_signature_manager_7,seq_number);
}
| _ -> {

}
int<<1>> book_signature = BookSignatureManager_sign_ret;
int<<32>> time_now = Sys.time();
int<<12>> timestamp = [31 : 20]time_now;
int<<32>> MetricSignatureManager_sign_ret = 32;
match path_id with 
| 0 -> {
MetricSignatureManager_sign_ret = Array.get(outgoing_metric_signature_manager_0,[3 : 0]timestamp);
}
| 1 -> {
MetricSignatureManager_sign_ret = Array.get(outgoing_metric_signature_manager_1,[3 : 0]timestamp);
}
| 2 -> {
MetricSignatureManager_sign_ret = Array.get(outgoing_metric_signature_manager_2,[3 : 0]timestamp);
}
| 3 -> {
MetricSignatureManager_sign_ret = Array.get(outgoing_metric_signature_manager_3,[3 : 0]timestamp);
}
| 4 -> {
MetricSignatureManager_sign_ret = Array.get(outgoing_metric_signature_manager_4,[3 : 0]timestamp);
}
| 5 -> {
MetricSignatureManager_sign_ret = Array.get(outgoing_metric_signature_manager_5,[3 : 0]timestamp);
}
| 6 -> {
MetricSignatureManager_sign_ret = Array.get(outgoing_metric_signature_manager_6,[3 : 0]timestamp);
}
| 7 -> {
MetricSignatureManager_sign_ret = Array.get(outgoing_metric_signature_manager_7,[3 : 0]timestamp);
}
| _ -> {

}
int<<32>> ts_signature = MetricSignatureManager_sign_ret;
int<<8>> tango_metrics_hdr_0 = (int<<8>>)path_id;
int<<16>> tango_metrics_hdr_1 = (int<<16>>)timestamp;
int<<32>> tango_metrics_hdr_2 = ts_signature;
int<<24>> tango_metrics_hdr_3 = seq_number;
int<<8>> tango_metrics_hdr_4 = (int<<8>>)book_signature;
int<<9>> to_immediate_tmp = [7 : 4]forward_flow_ip_header_0^0;
int<<16>> to_immediate_tmp = forward_flow_ip_header_2+(int<<16>>)to_immediate_tmp;
int<<16>> payload_len = to_immediate_tmp+176;
int<<48>> forward_tango_pkt_arg_0 = forward_flow_eth_header_0;
int<<48>> forward_tango_pkt_arg_1 = forward_flow_eth_header_1;
int<<16>> forward_tango_pkt_arg_2 = forward_flow_eth_header_2;
int<<32>> forward_tango_pkt_arg_3 = tango_tunnel_hdr_0;
int<<16>> forward_tango_pkt_arg_4 = payload_len;
int<<8>> forward_tango_pkt_arg_5 = tango_tunnel_hdr_2;
int<<8>> forward_tango_pkt_arg_6 = tango_tunnel_hdr_3;
int<<128>> forward_tango_pkt_arg_7 = tango_tunnel_hdr_4;
int<<128>> forward_tango_pkt_arg_8 = tango_tunnel_hdr_5;
int<<8>> forward_tango_pkt_arg_9 = tango_metrics_hdr_0;
int<<16>> forward_tango_pkt_arg_10 = tango_metrics_hdr_1;
int<<32>> forward_tango_pkt_arg_11 = tango_metrics_hdr_2;
int<<24>> forward_tango_pkt_arg_12 = tango_metrics_hdr_3;
int<<8>> forward_tango_pkt_arg_13 = tango_metrics_hdr_4;
int<<8>> forward_tango_pkt_arg_14 = forward_flow_ip_header_0;
int<<8>> forward_tango_pkt_arg_15 = forward_flow_ip_header_1;
int<<16>> forward_tango_pkt_arg_16 = forward_flow_ip_header_2;
int<<16>> forward_tango_pkt_arg_17 = forward_flow_ip_header_3;
int<<16>> forward_tango_pkt_arg_18 = forward_flow_ip_header_4;
int<<8>> forward_tango_pkt_arg_19 = forward_flow_ip_header_5;
int<<8>> forward_tango_pkt_arg_20 = forward_flow_ip_header_6;
int<<16>> forward_tango_pkt_arg_21 = forward_flow_ip_header_7;
int<<32>> forward_tango_pkt_arg_22 = forward_flow_ip_header_8;
int<<32>> forward_tango_pkt_arg_23 = forward_flow_ip_header_9;
int<<32>> forward_tango_pkt_arg_24 = forward_flow_five_tuple_0;
int<<32>> forward_tango_pkt_arg_25 = forward_flow_five_tuple_1;
int<<16>> forward_tango_pkt_arg_26 = forward_flow_five_tuple_2;
int<<16>> forward_tango_pkt_arg_27 = forward_flow_five_tuple_3;
int<<8>> forward_tango_pkt_arg_28 = forward_flow_five_tuple_4;
generate_port (1, incoming_tango_traffic(forward_tango_pkt_arg_0,forward_tango_pkt_arg_1,forward_tango_pkt_arg_2,forward_tango_pkt_arg_3,forward_tango_pkt_arg_4,forward_tango_pkt_arg_5,forward_tango_pkt_arg_6,forward_tango_pkt_arg_7,forward_tango_pkt_arg_8,forward_tango_pkt_arg_9,forward_tango_pkt_arg_10,forward_tango_pkt_arg_11,forward_tango_pkt_arg_12,forward_tango_pkt_arg_13,forward_tango_pkt_arg_14,forward_tango_pkt_arg_15,forward_tango_pkt_arg_16,forward_tango_pkt_arg_17,forward_tango_pkt_arg_18,forward_tango_pkt_arg_19,forward_tango_pkt_arg_20,forward_tango_pkt_arg_21,forward_tango_pkt_arg_22,forward_tango_pkt_arg_23,forward_tango_pkt_arg_24,forward_tango_pkt_arg_25,forward_tango_pkt_arg_26,forward_tango_pkt_arg_27,forward_tango_pkt_arg_28));
}
}

handle incoming_tango_traffic(int<<48>> incoming_tango_traffic_tango_eth_header_0,int<<48>> incoming_tango_traffic_tango_eth_header_1,int<<16>> incoming_tango_traffic_tango_eth_header_2,int<<32>> incoming_tango_traffic_tango_ip_header_0,int<<16>> incoming_tango_traffic_tango_ip_header_1,int<<8>> incoming_tango_traffic_tango_ip_header_2,int<<8>> incoming_tango_traffic_tango_ip_header_3,int<<128>> incoming_tango_traffic_tango_ip_header_4,int<<128>> incoming_tango_traffic_tango_ip_header_5,int<<8>> incoming_tango_traffic_tango_metrics_header_0,int<<16>> incoming_tango_traffic_tango_metrics_header_1,int<<32>> incoming_tango_traffic_tango_metrics_header_2,int<<24>> incoming_tango_traffic_tango_metrics_header_3,int<<8>> incoming_tango_traffic_tango_metrics_header_4,int<<8>> incoming_tango_traffic_encaped_ip_header_0,int<<8>> incoming_tango_traffic_encaped_ip_header_1,int<<16>> incoming_tango_traffic_encaped_ip_header_2,int<<16>> incoming_tango_traffic_encaped_ip_header_3,int<<16>> incoming_tango_traffic_encaped_ip_header_4,int<<8>> incoming_tango_traffic_encaped_ip_header_5,int<<8>> incoming_tango_traffic_encaped_ip_header_6,int<<16>> incoming_tango_traffic_encaped_ip_header_7,int<<32>> incoming_tango_traffic_encaped_ip_header_8,int<<32>> incoming_tango_traffic_encaped_ip_header_9,int<<32>> incoming_tango_traffic_encaped_five_tuple_0,int<<32>> incoming_tango_traffic_encaped_five_tuple_1,int<<16>> incoming_tango_traffic_encaped_five_tuple_2,int<<16>> incoming_tango_traffic_encaped_five_tuple_3,int<<8>> incoming_tango_traffic_encaped_five_tuple_4) {
int<<4>> map_flow_to_traffic_class_ret = 0;
match (incoming_tango_traffic_encaped_five_tuple_0,incoming_tango_traffic_encaped_five_tuple_2,incoming_tango_traffic_encaped_five_tuple_1,incoming_tango_traffic_encaped_five_tuple_3,incoming_tango_traffic_encaped_five_tuple_4) with 
| _,_,_,_,_ -> {
map_flow_to_traffic_class_ret = 15;
}
int<<4>> traffic_class = map_flow_to_traffic_class_ret;
if (traffic_class==15) {
int<<48>> tunneled_arg_0 = incoming_tango_traffic_tango_eth_header_0;
int<<48>> tunneled_arg_1 = incoming_tango_traffic_tango_eth_header_1;
int<<16>> tunneled_arg_2 = incoming_tango_traffic_tango_eth_header_2;
int<<8>> tunneled_arg_3 = incoming_tango_traffic_encaped_ip_header_0;
int<<8>> tunneled_arg_4 = incoming_tango_traffic_encaped_ip_header_1;
int<<16>> tunneled_arg_5 = incoming_tango_traffic_encaped_ip_header_2;
int<<16>> tunneled_arg_6 = incoming_tango_traffic_encaped_ip_header_3;
int<<16>> tunneled_arg_7 = incoming_tango_traffic_encaped_ip_header_4;
int<<8>> tunneled_arg_8 = incoming_tango_traffic_encaped_ip_header_5;
int<<8>> tunneled_arg_9 = incoming_tango_traffic_encaped_ip_header_6;
int<<16>> tunneled_arg_10 = incoming_tango_traffic_encaped_ip_header_7;
int<<32>> tunneled_arg_11 = incoming_tango_traffic_encaped_ip_header_8;
int<<32>> tunneled_arg_12 = incoming_tango_traffic_encaped_ip_header_9;
generate_port (2, complete_forward(tunneled_arg_0,tunneled_arg_1,tunneled_arg_2,tunneled_arg_3,tunneled_arg_4,tunneled_arg_5,tunneled_arg_6,tunneled_arg_7,tunneled_arg_8,tunneled_arg_9,tunneled_arg_10,tunneled_arg_11,tunneled_arg_12));
} else {
int<<3>> path_id = [2 : 0]incoming_tango_traffic_tango_metrics_header_0;
int<<1>> signature = [0 : 0]incoming_tango_traffic_tango_metrics_header_4;
int<<1>> BookSignatureManager_verify_ret = 0;
match path_id with 
| 0 -> {
BookSignatureManager_verify_ret = 0;
int<<1>> to_immediate_tmp = Array.get(incoming_book_signature_manager_0,incoming_tango_traffic_tango_metrics_header_3);
int<<32>> if_precomp = (int<<32>>)to_immediate_tmp-(int<<32>>)signature;
if (if_precomp==0) {
BookSignatureManager_verify_ret = 1;
} 
}
| 1 -> {
BookSignatureManager_verify_ret = 0;
int<<1>> to_immediate_tmp = Array.get(incoming_book_signature_manager_1,incoming_tango_traffic_tango_metrics_header_3);
int<<32>> if_precomp = (int<<32>>)to_immediate_tmp-(int<<32>>)signature;
if (if_precomp==0) {
BookSignatureManager_verify_ret = 1;
} 
}
| 2 -> {
BookSignatureManager_verify_ret = 0;
int<<1>> to_immediate_tmp = Array.get(incoming_book_signature_manager_2,incoming_tango_traffic_tango_metrics_header_3);
int<<32>> if_precomp = (int<<32>>)to_immediate_tmp-(int<<32>>)signature;
if (if_precomp==0) {
BookSignatureManager_verify_ret = 1;
} 
}
| 3 -> {
BookSignatureManager_verify_ret = 0;
int<<1>> to_immediate_tmp = Array.get(incoming_book_signature_manager_3,incoming_tango_traffic_tango_metrics_header_3);
int<<32>> if_precomp = (int<<32>>)to_immediate_tmp-(int<<32>>)signature;
if (if_precomp==0) {
BookSignatureManager_verify_ret = 1;
} 
}
| 4 -> {
BookSignatureManager_verify_ret = 0;
int<<1>> to_immediate_tmp = Array.get(incoming_book_signature_manager_4,incoming_tango_traffic_tango_metrics_header_3);
int<<32>> if_precomp = (int<<32>>)to_immediate_tmp-(int<<32>>)signature;
if (if_precomp==0) {
BookSignatureManager_verify_ret = 1;
} 
}
| 5 -> {
BookSignatureManager_verify_ret = 0;
int<<1>> to_immediate_tmp = Array.get(incoming_book_signature_manager_5,incoming_tango_traffic_tango_metrics_header_3);
int<<32>> if_precomp = (int<<32>>)to_immediate_tmp-(int<<32>>)signature;
if (if_precomp==0) {
BookSignatureManager_verify_ret = 1;
} 
}
| 6 -> {
BookSignatureManager_verify_ret = 0;
int<<1>> to_immediate_tmp = Array.get(incoming_book_signature_manager_6,incoming_tango_traffic_tango_metrics_header_3);
int<<32>> if_precomp = (int<<32>>)to_immediate_tmp-(int<<32>>)signature;
if (if_precomp==0) {
BookSignatureManager_verify_ret = 1;
} 
}
| 7 -> {
BookSignatureManager_verify_ret = 0;
int<<1>> to_immediate_tmp = Array.get(incoming_book_signature_manager_7,incoming_tango_traffic_tango_metrics_header_3);
int<<32>> if_precomp = (int<<32>>)to_immediate_tmp-(int<<32>>)signature;
if (if_precomp==0) {
BookSignatureManager_verify_ret = 1;
} 
}
| _ -> {

}
int<<1>> is_valid_seq_num = BookSignatureManager_verify_ret;
int<<12>> timestamp = [11 : 0]incoming_tango_traffic_tango_metrics_header_1;
int<<3>> path_id = [2 : 0]incoming_tango_traffic_tango_metrics_header_0;
int<<1>> MetricSignatureManager_verify_ret = 0;
match path_id with 
| 0 -> {
MetricSignatureManager_verify_ret = 0;
int<<32>> to_immediate_tmp = Array.get(incoming_metric_signature_manager_0,[3 : 0]timestamp);
int<<32>> if_precomp = to_immediate_tmp-incoming_tango_traffic_tango_metrics_header_2;
if (if_precomp==0) {
MetricSignatureManager_verify_ret = 1;
} 
}
| 1 -> {
MetricSignatureManager_verify_ret = 0;
int<<32>> to_immediate_tmp = Array.get(incoming_metric_signature_manager_1,[3 : 0]timestamp);
int<<32>> if_precomp = to_immediate_tmp-incoming_tango_traffic_tango_metrics_header_2;
if (if_precomp==0) {
MetricSignatureManager_verify_ret = 1;
} 
}
| 2 -> {
MetricSignatureManager_verify_ret = 0;
int<<32>> to_immediate_tmp = Array.get(incoming_metric_signature_manager_2,[3 : 0]timestamp);
int<<32>> if_precomp = to_immediate_tmp-incoming_tango_traffic_tango_metrics_header_2;
if (if_precomp==0) {
MetricSignatureManager_verify_ret = 1;
} 
}
| 3 -> {
MetricSignatureManager_verify_ret = 0;
int<<32>> to_immediate_tmp = Array.get(incoming_metric_signature_manager_3,[3 : 0]timestamp);
int<<32>> if_precomp = to_immediate_tmp-incoming_tango_traffic_tango_metrics_header_2;
if (if_precomp==0) {
MetricSignatureManager_verify_ret = 1;
} 
}
| 4 -> {
MetricSignatureManager_verify_ret = 0;
int<<32>> to_immediate_tmp = Array.get(incoming_metric_signature_manager_4,[3 : 0]timestamp);
int<<32>> if_precomp = to_immediate_tmp-incoming_tango_traffic_tango_metrics_header_2;
if (if_precomp==0) {
MetricSignatureManager_verify_ret = 1;
} 
}
| 5 -> {
MetricSignatureManager_verify_ret = 0;
int<<32>> to_immediate_tmp = Array.get(incoming_metric_signature_manager_5,[3 : 0]timestamp);
int<<32>> if_precomp = to_immediate_tmp-incoming_tango_traffic_tango_metrics_header_2;
if (if_precomp==0) {
MetricSignatureManager_verify_ret = 1;
} 
}
| 6 -> {
MetricSignatureManager_verify_ret = 0;
int<<32>> to_immediate_tmp = Array.get(incoming_metric_signature_manager_6,[3 : 0]timestamp);
int<<32>> if_precomp = to_immediate_tmp-incoming_tango_traffic_tango_metrics_header_2;
if (if_precomp==0) {
MetricSignatureManager_verify_ret = 1;
} 
}
| 7 -> {
MetricSignatureManager_verify_ret = 0;
int<<32>> to_immediate_tmp = Array.get(incoming_metric_signature_manager_7,[3 : 0]timestamp);
int<<32>> if_precomp = to_immediate_tmp-incoming_tango_traffic_tango_metrics_header_2;
if (if_precomp==0) {
MetricSignatureManager_verify_ret = 1;
} 
}
| _ -> {

}
int<<1>> is_valid_metrics = MetricSignatureManager_verify_ret;
if (!is_valid_seq_num==1&&is_valid_metrics==1) {
int<<3>> path_id = [2 : 0]incoming_tango_traffic_tango_metrics_header_0;
Array.setm(invalid_pkt_manager_0,path_id,InvalidPacketManager_increment,1);
} else {
int<<3>> path_id = [2 : 0]incoming_tango_traffic_tango_metrics_header_0;
int<<6>> MetricAverageTracker_increment_ret = 32;
MetricAverageTracker_increment_ret = Array.update(metric_avg_tracker_0,path_id,MetricAverageTracker_get_curr,0,MetricAverageTracker_next,0);
int<<32>> avg_count = (int<<32>>)MetricAverageTracker_increment_ret;
int<<3>> path_id = [2 : 0]incoming_tango_traffic_tango_metrics_header_0;
int<<32>> LossMetricsManager_update_loss_ret = 32;
int<<24>> to_immediate_tmp = Array.update(loss_metrics_manager_0,path_id,LossMetricsManager_calc_loss,incoming_tango_traffic_tango_metrics_header_3,LossMetricsManager_store_larger,incoming_tango_traffic_tango_metrics_header_3);
int<<32>> loss_found = (int<<32>>)to_immediate_tmp;
int<<32>> curr_loss_sum = 0;
int<<32>> if_precomp = avg_count|-|62;
if (if_precomp!=0) {
curr_loss_sum = Array.update(loss_metrics_manager_1,path_id,LossMetricsManager_get_loss_sum,loss_found,LossMetricsManager_reset_loss_sum,0);
} else {
curr_loss_sum = Array.update(loss_metrics_manager_1,path_id,LossMetricsManager_get_loss_sum,loss_found,LossMetricsManager_get_loss_sum,loss_found);
}
int<<32>> avg_loss = 0;
int<<32>> if_precomp = avg_count|-|62;
if (if_precomp!=0) {
avg_loss = curr_loss_sum;
Array.set(loss_metrics_manager_2,path_id,curr_loss_sum);
} else {
avg_loss = Array.get(loss_metrics_manager_2,path_id);
}
LossMetricsManager_update_loss_ret = avg_loss;
int<<32>> loss_metrics = LossMetricsManager_update_loss_ret;
int<<12>> timestamp = [11 : 0]incoming_tango_traffic_tango_metrics_header_1;
int<<3>> path_id = [2 : 0]incoming_tango_traffic_tango_metrics_header_0;
int<<32>> DelayMetricsManager_update_delay_ret = 32;
int<<32>> time_now = Sys.time();
int<<12>> curr_time = [31 : 20]time_now;
int<<12>> to_immediate_tmp = curr_time-timestamp;
int<<32>> new_delay = (int<<32>>)to_immediate_tmp;
int<<32>> delay_sum = 0;
int<<32>> if_precomp = avg_count|-|62;
if (if_precomp!=0) {
delay_sum = Array.update(delay_metrics_manager_0,path_id,DelayMetricsManager_get_delay_sum,new_delay,DelayMetricsManager_reset_delay_sum,0);
} else {
delay_sum = Array.update(delay_metrics_manager_0,path_id,DelayMetricsManager_get_delay_sum,new_delay,DelayMetricsManager_get_delay_sum,new_delay);
}
int<<32>> delay_avg = Array.update_complex(delay_metrics_manager_1,path_id,DelayMetricsManager_update_delay_avg,delay_sum,avg_count,0);
DelayMetricsManager_update_delay_ret = delay_avg;
int<<32>> delay_metrics = DelayMetricsManager_update_delay_ret;
int<<48>> tunneled_arg_0 = incoming_tango_traffic_tango_eth_header_0;
int<<48>> tunneled_arg_1 = incoming_tango_traffic_tango_eth_header_1;
int<<16>> tunneled_arg_2 = incoming_tango_traffic_tango_eth_header_2;
int<<8>> tunneled_arg_3 = incoming_tango_traffic_encaped_ip_header_0;
int<<8>> tunneled_arg_4 = incoming_tango_traffic_encaped_ip_header_1;
int<<16>> tunneled_arg_5 = incoming_tango_traffic_encaped_ip_header_2;
int<<16>> tunneled_arg_6 = incoming_tango_traffic_encaped_ip_header_3;
int<<16>> tunneled_arg_7 = incoming_tango_traffic_encaped_ip_header_4;
int<<8>> tunneled_arg_8 = incoming_tango_traffic_encaped_ip_header_5;
int<<8>> tunneled_arg_9 = incoming_tango_traffic_encaped_ip_header_6;
int<<16>> tunneled_arg_10 = incoming_tango_traffic_encaped_ip_header_7;
int<<32>> tunneled_arg_11 = incoming_tango_traffic_encaped_ip_header_8;
int<<32>> tunneled_arg_12 = incoming_tango_traffic_encaped_ip_header_9;
generate_port (2, complete_forward(tunneled_arg_0,tunneled_arg_1,tunneled_arg_2,tunneled_arg_3,tunneled_arg_4,tunneled_arg_5,tunneled_arg_6,tunneled_arg_7,tunneled_arg_8,tunneled_arg_9,tunneled_arg_10,tunneled_arg_11,tunneled_arg_12));
}
}
}
compute expressions simplified.
