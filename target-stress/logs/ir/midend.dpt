// after phase: midendmemop SequenceNumberManager_next(int<<32>> curr,int<<32>> inc)
 {return curr+inc;
}

memop SequenceNumberManager_get_curr(int<<32>> curr,int<<32>> inc)
 {return curr;
}

global Array.t<<16>> sequence_counters_0 = Array.create(1);


global Array.t<<32>> outgoing_book_signature_manager_0 = Array.create(2048);


global Array.t<<32>> outgoing_metric_signature_manager_0 = Array.create(32);


entry event forward_flow(int<<48>> eth_header_0,int<<48>> eth_header_1,int<<16>> eth_header_2,int<<8>> ip_header_0,int<<8>> ip_header_1,int<<16>> ip_header_2,int<<16>> ip_header_3,int<<16>> ip_header_4,int<<8>> ip_header_5,int<<8>> ip_header_6,int<<16>> ip_header_7,int<<32>> ip_header_8,int<<32>> ip_header_9,int<<16>> udp_header_0,int<<16>> udp_header_1,int<<16>> udp_header_2,int<<16>> udp_header_3);

exit event incoming_tango_traffic(int<<48>> tango_eth_header_0,int<<48>> tango_eth_header_1,int<<16>> tango_eth_header_2,int<<32>> tango_ip_header_0,int<<16>> tango_ip_header_1,int<<8>> tango_ip_header_2,int<<8>> tango_ip_header_3,int<<64>> tango_ip_header_4,int<<64>> tango_ip_header_5,int<<64>> tango_ip_header_6,int<<64>> tango_ip_header_7,int<<16>> tango_udp_header_0,int<<16>> tango_udp_header_1,int<<16>> tango_udp_header_2,int<<16>> tango_udp_header_3,int<<8>> tango_metrics_header_0,int<<16>> tango_metrics_header_1,int<<32>> tango_metrics_header_2,int<<16>> tango_metrics_header_3,int<<8>> tango_metrics_header_4,int<<8>> encaped_ip_header_0,int<<8>> encaped_ip_header_1,int<<16>> encaped_ip_header_2,int<<16>> encaped_ip_header_3,int<<16>> encaped_ip_header_4,int<<8>> encaped_ip_header_5,int<<8>> encaped_ip_header_6,int<<16>> encaped_ip_header_7,int<<32>> encaped_ip_header_8,int<<32>> encaped_ip_header_9,int<<16>> encaped_udp_header_0,int<<16>> encaped_udp_header_1,int<<16>> encaped_udp_header_2,int<<16>> encaped_udp_header_3);

handle forward_flow(int<<48>> eth_header_0,int<<48>> eth_header_1,int<<16>> eth_header_2,int<<8>> ip_header_0,int<<8>> ip_header_1,int<<16>> ip_header_2,int<<16>> ip_header_3,int<<16>> ip_header_4,int<<8>> ip_header_5,int<<8>> ip_header_6,int<<16>> ip_header_7,int<<32>> ip_header_8,int<<32>> ip_header_9,int<<16>> udp_header_0,int<<16>> udp_header_1,int<<16>> udp_header_2,int<<16>> udp_header_3) {
int<<16>> SequenceNumberManager_increment_ret = 32;
SequenceNumberManager_increment_ret = Array.update(sequence_counters_0,0,SequenceNumberManager_get_curr,0,SequenceNumberManager_next,(int<<16>>)1);
int<<16>> seq_number = SequenceNumberManager_increment_ret;
int<<32>> time_now = Sys.time();
int<<12>> timestamp = [31 : 20]time_now;
int<<1>> BookSignatureManager_sign_ret = 0;
int<<32>> sig_bitstring = Array.get(outgoing_book_signature_manager_0,[15 : 5]seq_number);
int<<5>> bitwhack_index = [4 : 0]seq_number;
match bitwhack_index with 
| 0 -> {
BookSignatureManager_sign_ret = [0 : 0]sig_bitstring;
}
int<<1>> book_signature = BookSignatureManager_sign_ret;
int<<32>> MetricSignatureManager_sign_ret = 32;
MetricSignatureManager_sign_ret = Array.get(outgoing_metric_signature_manager_0,[4 : 0]timestamp);
int<<32>> ts_signature = MetricSignatureManager_sign_ret;
int<<8>> tango_metrics_hdr_0 = 0;
int<<16>> tango_metrics_hdr_1 = (int<<16>>)timestamp;
int<<32>> tango_metrics_hdr_2 = ts_signature;
int<<16>> tango_metrics_hdr_3 = seq_number;
int<<8>> tango_metrics_hdr_4 = (int<<8>>)book_signature;
generate_port (128, incoming_tango_traffic(eth_header_0,eth_header_1,34525,0,18+ip_header_2,0,0,0,0,0,0,8080,8080,0,0,tango_metrics_hdr_0,tango_metrics_hdr_1,tango_metrics_hdr_2,tango_metrics_hdr_3,tango_metrics_hdr_4,ip_header_0,ip_header_1,ip_header_2,ip_header_3,ip_header_4,ip_header_5,ip_header_6,ip_header_7,ip_header_8,ip_header_9,udp_header_0,udp_header_1,udp_header_2,udp_header_3));
}