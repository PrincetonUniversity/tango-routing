---normalizeBools.ml log---
original if statement: 
if ((int<<32>>)set_signature_sig_type==0) {
int<<16>> seq_number = [15 : 0]set_signature_curr_signature;
int<<1>> BookSignatureManager_sign_ret = 0;
int<<16>> precompute = (int<<16>>)[15 : 5]seq_number;
int<<32>> sig_bitstring = Array.get(outgoing_book_signature_manager_0,precompute);
int<<5>> bitwhack_index = [4 : 0]seq_number;
match bitwhack_index with 
| 0 -> {
BookSignatureManager_sign_ret = [0 : 0]sig_bitstring;
}
| 1 -> {
BookSignatureManager_sign_ret = [1 : 1]sig_bitstring;
}
| 2 -> {
BookSignatureManager_sign_ret = [2 : 2]sig_bitstring;
}
| 3 -> {
BookSignatureManager_sign_ret = [3 : 3]sig_bitstring;
}
| 4 -> {
BookSignatureManager_sign_ret = [4 : 4]sig_bitstring;
}
| 5 -> {
BookSignatureManager_sign_ret = [5 : 5]sig_bitstring;
}
| 6 -> {
BookSignatureManager_sign_ret = [6 : 6]sig_bitstring;
}
| 7 -> {
BookSignatureManager_sign_ret = [7 : 7]sig_bitstring;
}
| 8 -> {
BookSignatureManager_sign_ret = [8 : 8]sig_bitstring;
}
| 9 -> {
BookSignatureManager_sign_ret = [9 : 9]sig_bitstring;
}
| 10 -> {
BookSignatureManager_sign_ret = [10 : 10]sig_bitstring;
}
| 11 -> {
BookSignatureManager_sign_ret = [11 : 11]sig_bitstring;
}
| 12 -> {
BookSignatureManager_sign_ret = [12 : 12]sig_bitstring;
}
| 13 -> {
BookSignatureManager_sign_ret = [13 : 13]sig_bitstring;
}
| 14 -> {
BookSignatureManager_sign_ret = [14 : 14]sig_bitstring;
}
| 15 -> {
BookSignatureManager_sign_ret = [15 : 15]sig_bitstring;
}
| 16 -> {
BookSignatureManager_sign_ret = [16 : 16]sig_bitstring;
}
| 17 -> {
BookSignatureManager_sign_ret = [17 : 17]sig_bitstring;
}
| 18 -> {
BookSignatureManager_sign_ret = [18 : 18]sig_bitstring;
}
| 19 -> {
BookSignatureManager_sign_ret = [19 : 19]sig_bitstring;
}
| 20 -> {
BookSignatureManager_sign_ret = [20 : 20]sig_bitstring;
}
| 21 -> {
BookSignatureManager_sign_ret = [21 : 21]sig_bitstring;
}
| 22 -> {
BookSignatureManager_sign_ret = [22 : 22]sig_bitstring;
}
| 23 -> {
BookSignatureManager_sign_ret = [23 : 23]sig_bitstring;
}
| 24 -> {
BookSignatureManager_sign_ret = [24 : 24]sig_bitstring;
}
| 25 -> {
BookSignatureManager_sign_ret = [25 : 25]sig_bitstring;
}
| 26 -> {
BookSignatureManager_sign_ret = [26 : 26]sig_bitstring;
}
| 27 -> {
BookSignatureManager_sign_ret = [27 : 27]sig_bitstring;
}
| 28 -> {
BookSignatureManager_sign_ret = [28 : 28]sig_bitstring;
}
| 29 -> {
BookSignatureManager_sign_ret = [29 : 29]sig_bitstring;
}
| 30 -> {
BookSignatureManager_sign_ret = [30 : 30]sig_bitstring;
}
| _ -> {
BookSignatureManager_sign_ret = [31 : 31]sig_bitstring;
}
} else {
int<<12>> timestamp = [11 : 0]set_signature_curr_signature;
int<<32>> MetricSignatureManager_sign_ret = 32;
int<<16>> precompute = (int<<16>>)[4 : 0]timestamp;
MetricSignatureManager_sign_ret = Array.get(outgoing_metric_signature_manager_0,precompute);
}
new if statement: 
int<<32>> if_precomp = (int<<32>>)set_signature_sig_type-0;
if (if_precomp==0) {
int<<16>> seq_number = [15 : 0]set_signature_curr_signature;
int<<1>> BookSignatureManager_sign_ret = 0;
int<<16>> precompute = (int<<16>>)[15 : 5]seq_number;
int<<32>> sig_bitstring = Array.get(outgoing_book_signature_manager_0,precompute);
int<<5>> bitwhack_index = [4 : 0]seq_number;
match bitwhack_index with 
| 0 -> {
BookSignatureManager_sign_ret = [0 : 0]sig_bitstring;
}
| 1 -> {
BookSignatureManager_sign_ret = [1 : 1]sig_bitstring;
}
| 2 -> {
BookSignatureManager_sign_ret = [2 : 2]sig_bitstring;
}
| 3 -> {
BookSignatureManager_sign_ret = [3 : 3]sig_bitstring;
}
| 4 -> {
BookSignatureManager_sign_ret = [4 : 4]sig_bitstring;
}
| 5 -> {
BookSignatureManager_sign_ret = [5 : 5]sig_bitstring;
}
| 6 -> {
BookSignatureManager_sign_ret = [6 : 6]sig_bitstring;
}
| 7 -> {
BookSignatureManager_sign_ret = [7 : 7]sig_bitstring;
}
| 8 -> {
BookSignatureManager_sign_ret = [8 : 8]sig_bitstring;
}
| 9 -> {
BookSignatureManager_sign_ret = [9 : 9]sig_bitstring;
}
| 10 -> {
BookSignatureManager_sign_ret = [10 : 10]sig_bitstring;
}
| 11 -> {
BookSignatureManager_sign_ret = [11 : 11]sig_bitstring;
}
| 12 -> {
BookSignatureManager_sign_ret = [12 : 12]sig_bitstring;
}
| 13 -> {
BookSignatureManager_sign_ret = [13 : 13]sig_bitstring;
}
| 14 -> {
BookSignatureManager_sign_ret = [14 : 14]sig_bitstring;
}
| 15 -> {
BookSignatureManager_sign_ret = [15 : 15]sig_bitstring;
}
| 16 -> {
BookSignatureManager_sign_ret = [16 : 16]sig_bitstring;
}
| 17 -> {
BookSignatureManager_sign_ret = [17 : 17]sig_bitstring;
}
| 18 -> {
BookSignatureManager_sign_ret = [18 : 18]sig_bitstring;
}
| 19 -> {
BookSignatureManager_sign_ret = [19 : 19]sig_bitstring;
}
| 20 -> {
BookSignatureManager_sign_ret = [20 : 20]sig_bitstring;
}
| 21 -> {
BookSignatureManager_sign_ret = [21 : 21]sig_bitstring;
}
| 22 -> {
BookSignatureManager_sign_ret = [22 : 22]sig_bitstring;
}
| 23 -> {
BookSignatureManager_sign_ret = [23 : 23]sig_bitstring;
}
| 24 -> {
BookSignatureManager_sign_ret = [24 : 24]sig_bitstring;
}
| 25 -> {
BookSignatureManager_sign_ret = [25 : 25]sig_bitstring;
}
| 26 -> {
BookSignatureManager_sign_ret = [26 : 26]sig_bitstring;
}
| 27 -> {
BookSignatureManager_sign_ret = [27 : 27]sig_bitstring;
}
| 28 -> {
BookSignatureManager_sign_ret = [28 : 28]sig_bitstring;
}
| 29 -> {
BookSignatureManager_sign_ret = [29 : 29]sig_bitstring;
}
| 30 -> {
BookSignatureManager_sign_ret = [30 : 30]sig_bitstring;
}
| _ -> {
BookSignatureManager_sign_ret = [31 : 31]sig_bitstring;
}
} else {
int<<12>> timestamp = [11 : 0]set_signature_curr_signature;
int<<32>> MetricSignatureManager_sign_ret = 32;
int<<16>> precompute = (int<<16>>)[4 : 0]timestamp;
MetricSignatureManager_sign_ret = Array.get(outgoing_metric_signature_manager_0,precompute);
}
original if statement: 
if (set_signature_next_signature!=0) {
int<<16>> precompute = set_signature_ip_header_1-32;
int<<16>> precompute = set_signature_sig_idx+1;
generate_port (196, set_next_signature(set_signature_eth_header_0,set_signature_eth_header_1,set_signature_eth_header_2,set_signature_ip_header_0,precompute,set_signature_ip_header_2,set_signature_ip_header_3,set_signature_ip_header_4,set_signature_ip_header_5,set_signature_ip_header_6,set_signature_ip_header_7,set_signature_udp_header_0,set_signature_udp_header_1,set_signature_udp_header_2,set_signature_udp_header_3,set_signature_sig_type,precompute,set_signature_block_idx,set_signature_next_signature));
} 
new if statement: 
if (set_signature_next_signature!=0) {
int<<16>> precompute = set_signature_ip_header_1-32;
int<<16>> precompute = set_signature_sig_idx+1;
generate_port (196, set_next_signature(set_signature_eth_header_0,set_signature_eth_header_1,set_signature_eth_header_2,set_signature_ip_header_0,precompute,set_signature_ip_header_2,set_signature_ip_header_3,set_signature_ip_header_4,set_signature_ip_header_5,set_signature_ip_header_6,set_signature_ip_header_7,set_signature_udp_header_0,set_signature_udp_header_1,set_signature_udp_header_2,set_signature_udp_header_3,set_signature_sig_type,precompute,set_signature_block_idx,set_signature_next_signature));
} 
converting expression to dnf form: if_precomp==0

converted expression into a disjunction of 1 exprs

converting: (= if_precomp~4238 tmp_val_id~4239)

converting: if_precomp~4238

converting: tmp_val_id~4239

old expression:  if_precomp==0

new expression:  if_precomp==0

new expression show: if_precomp==0

converting expression to dnf form: set_signature_next_signature!=0

converted expression into a disjunction of 1 exprs

converting: (not (= set_signature_next_signature~0 tmp_val_id~4240))

converting: (= set_signature_next_signature~0 tmp_val_id~4240)

converting: set_signature_next_signature~0

converting: tmp_val_id~4240

old expression:  set_signature_next_signature!=0

new expression:  set_signature_next_signature!=0

new expression show: set_signature_next_signature!=0

